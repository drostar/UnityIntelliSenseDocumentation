<?xml version="1.0" encoding="iso-8859-1"?>
<!-- Generated by Intellisense Code Hints for Unity  - - -->
<doc>
	<assembly>
		<name>UnityEditor.UI</name>
	</assembly>
	<members>
		<member name="T:UnityEditor.UI.EventSystemEditor">
			<summary>
				<para>Custom Editor for the EventSystem Component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.EventSystemEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.EventSystemEditor.HasPreviewGUI" />
		<member name="M:UnityEditor.UI.EventSystemEditor.RequiresConstantRepaint" />
		<member name="M:UnityEditor.UI.EventSystemEditor.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)" />
		<member name="P:UnityEditor.UI.EventSystemEditor.previewLabelStyle" />
		<member name="T:UnityEditor.EventSystems.EventTriggerEditor">
			<summary>
				<para>Custom Editor for the EventTrigger Component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.EventSystems.EventTriggerEditor.OnInspectorGUI">
			<summary>
				<para>Implement specific EventTrigger inspector GUI code here. If you want to simply extend the existing editor call the base OnInspectorGUI () before doing any custom GUI code.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.AspectRatioFitterEditor">
			<summary>
				<para>Custom Editor for the AspectRatioFitter component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.AspectRatioFitterEditor.OnInspectorGUI">
			<summary>
				<para>See Editor.OnInspectorGUI.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.ButtonEditor">
			<summary>
				<para>Custom Editor for the Button Component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.ButtonEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.CanvasScalerEditor">
			<summary>
				<para>Custom Editor for the CanvasScaler component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.CanvasScalerEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.ContentSizeFitterEditor">
			<summary>
				<para>Custom Editor for the ContentSizeFitter Component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.ContentSizeFitterEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.GraphicEditor">
			<summary>
				<para>Extend this class to write your own graphic editor.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.GraphicEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.GridLayoutGroupEditor">
			<summary>
				<para>Custom Editor for the GridLayout Component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.GridLayoutGroupEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.HorizontalOrVerticalLayoutGroupEditor">
			<summary>
				<para>The Editor for the <see cref="HorizontalOrVerticalLayoutGroup">HorizontalOrVerticalLayoutGroup</see> class.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.HorizontalOrVerticalLayoutGroupEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.ImageEditor">
			<summary>
				<para>Custom Editor for the Image Component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.ImageEditor.OnInspectorGUI">
			<summary>
				<para>Implement specific ImageEditor inspector GUI code here. If you want to simply extend the existing editor call the base OnInspectorGUI () before doing any custom GUI code.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.ImageEditor.HasPreviewGUI">
			<summary>
				<para>Can this component be Previewed in its current state?</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.ImageEditor.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
			<summary>
				<para>Custom preview for Image component.</para>
			</summary>
			<param name="rect">Rectangle in which to draw the preview.</param>
			<param name="background">Background image.</param>
		</member>
		<member name="M:UnityEditor.UI.ImageEditor.GetInfoString">
			<summary>
				<para>A string cointaining the Image details to be used as a overlay on the component Preview.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.InputFieldEditor">
			<summary>
				<para>Custom Editor for the InputField Component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.InputFieldEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.LayoutElementEditor">
			<summary>
				<para>Editor for the <see cref="LayoutElement">LayoutElement</see> component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.LayoutElementEditor.OnInspectorGUI">
			<summary>
				<para>See: <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.RawImageEditor">
			<summary>
				<para>Custom editor for RawImage.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.RawImageEditor.OnInspectorGUI">
			<summary>
				<para>Implement specific RawImage inspector GUI code here. If you want to simply extend the existing editor call the base OnInspectorGUI () before doing any custom GUI code.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.RawImageEditor.HasPreviewGUI">
			<summary>
				<para>Can this component be Previewed in its current state?</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.RawImageEditor.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
			<summary>
				<para>Custom preview for Image component.</para>
			</summary>
			<param name="rect">Rectangle in which to draw the preview.</param>
			<param name="background">Background image.</param>
		</member>
		<member name="M:UnityEditor.UI.RawImageEditor.GetInfoString">
			<summary>
				<para>A string cointaining the Image details to be used as a overlay on the component Preview.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.ScrollbarEditor">
			<summary>
				<para>Custom Editor for the Scrollbar Component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.ScrollbarEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.ScrollRectEditor">
			<summary>
				<para>Editor for the <see cref="ScrollRect">ScrollRect</see> component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.ScrollRectEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.SelectableEditor">
			<summary>
				<para>Custom Editor for the Selectable Component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.SelectableEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.SelfControllerEditor">
			<summary>
				<para>Base class for custom editors that are for components that implement the SelfControllerEditor interface.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.SelfControllerEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.SliderEditor">
			<summary>
				<para>Custom Editor for the Slider Component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.SliderEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.TextEditor">
			<summary>
				<para>Custom Editor for the Text Component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.TextEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.ToggleEditor">
			<summary>
				<para>Custom Editor for the Toggle Component.</para>
			</summary>
		</member>
		<member name="M:UnityEditor.UI.ToggleEditor.OnInspectorGUI">
			<summary>
				<para>See <see cref="Editor.OnInspectorGUI">Editor.OnInspectorGUI</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.AnimationTriggersDrawer">
			<summary>
				<para>PropertyDrawer for <see cref="AnimationTriggers">AnimationTriggers</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.ColorBlockDrawer">
			<summary>
				<para>PropertyDrawer for <see cref="ColorBlock">ColorBlock</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.FontDataDrawer">
			<summary>
				<para>PropertyDrawer for <see cref="FontData">FontData</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.NavigationDrawer">
			<summary>
				<para>PropertyDrawer for <see cref="Navigation">Navigation</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEditor.UI.SpriteStateDrawer">
			<summary>
				<para>PropertyDrawer for <see cref="SpriteState">SpriteState</see>.</para>
			</summary>
		</member>
	</members>
</doc>