<?xml version="1.0" encoding="iso-8859-1"?>
<!-- Generated by Intellisense Code Hints for Unity  - - -->
<doc>
	<assembly>
		<name>UnityEngine.UI</name>
	</assembly>
	<members>
		<member name="T:UnityEngine.EventSystems.EventHandle">
			<summary>
				<para>Enum that tracks event State.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventHandle.Unused">
			<summary>
				<para>Unused.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventHandle.Used">
			<summary>
				<para>Used.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.IEventSystemHandler">
			<summary>
				<para>Base class that all <see cref="EventSystem">EventSystem</see> events inherit from.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.IPointerEnterHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IPointerEnterHandler.OnPointerEnter">OnPointerEnter</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.IPointerExitHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IPointerExitHandler.OnPointerExit">OnPointerExit</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.IPointerDownHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IPointerDownHandler.OnPointerDown">OnPointerDown</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.IPointerUpHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IPointerUpHandler.OnPointerUp">OnPointerUp</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.IPointerClickHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IPointerClickHandler.OnPointerClick">OnPointerClick</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.IBeginDragHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IBeginDragHandler.OnBeginDrag">OnBeginDrag</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Called by a <see cref="BaseInputModule">BaseInputModule</see> before a drag is started.</para>
			</summary>
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.IInitializePotentialDragHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IInitializePotentialDragHandler.OnInitializePotentialDrag">OnInitializePotentialDrag</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IInitializePotentialDragHandler.OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Called by a <see cref="BaseInputModule">BaseInputModule</see> when a drag has been found but before it is valid to begin the drag.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.IDragHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IDragHandler.OnDrag">OnDrag</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IDragHandler.OnDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>When draging is occuring this will be called every time the cursor is moved.</para>
			</summary>
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.IEndDragHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IEndDragHandler.OnEndDrag">OnEndDrag</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Called by a <see cref="BaseInputModule">BaseInputModule</see> when a drag is ended.</para>
			</summary>
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.IDropHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IDropHandler.OnDrop">OnDrop</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IDropHandler.OnDrop(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Called by a <see cref="BaseInputModule">BaseInputModule</see> on a target that can accept a drop.</para>
			</summary>
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.IScrollHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IScrollHandler.OnScroll">OnScroll</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IScrollHandler.OnScroll(UnityEngine.EventSystems.PointerEventData)">
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.IUpdateSelectedHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IUpdateSelectedHandler.OnUpdateSelected">OnUpdateSelected</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IUpdateSelectedHandler.OnUpdateSelected(UnityEngine.EventSystems.BaseEventData)">
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.ISelectHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="ISelectHandler.OnSelect">OnSelect</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.ISelectHandler.OnSelect(UnityEngine.EventSystems.BaseEventData)">
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.IDeselectHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IDeselectHandler.OnDeselect">OnDeselect</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IDeselectHandler.OnDeselect(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>Called by the <see cref="EventSystem">EventSystem</see> when a new object is being selected.</para>
			</summary>
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.IMoveHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="IMoveHandler.OnMove">OnMove</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.IMoveHandler.OnMove(UnityEngine.EventSystems.AxisEventData)">
			<summary>
				<para>Called by a <see cref="BaseInputModule">BaseInputModule</see> when a move event occurs.</para>
			</summary>
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.ISubmitHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="ISubmitHandler.OnSubmit">OnSubmit</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.ISubmitHandler.OnSubmit(UnityEngine.EventSystems.BaseEventData)">
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.ICancelHandler">
			<summary>
				<para>Interface to implement if you wish to receive <see cref="ICancelHandler.OnCancel">OnCancel</see> callbacks.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.ICancelHandler.OnCancel(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>Called by a <see cref="BaseInputModule">BaseInputModule</see> when a Cancel even occurs.</para>
			</summary>
			<param name="eventData">Current event data.</param>
		</member>
		<member name="T:UnityEngine.EventSystems.EventSystem">
			<summary>
				<para>Handles input, raycasting, and sending events.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventSystem.UpdateModules">
			<summary>
				<para>Recalculate the internal list of <see cref="BaseInputModules">BaseInputModules</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventSystem.SetSelectedGameObject(UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>Set the object as selected. Will send an OnDeselect the the old selected object and OnSelect to the new selected object.</para>
			</summary>
			<param name="selected">GameObject to select.</param>
			<param name="pointer">Associated EventData.</param>
		</member>
		<member name="M:UnityEngine.EventSystems.EventSystem.SetSelectedGameObject(UnityEngine.GameObject)">
			<summary>
				<para>Set the object as selected. Will send an OnDeselect the the old selected object and OnSelect to the new selected object.</para>
			</summary>
			<param name="selected">GameObject to select.</param>
		</member>
		<member name="M:UnityEngine.EventSystems.EventSystem.RaycastAll(UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List{UnityEngine.EventSystems.RaycastResult})">
			<summary>
				<para>Raycast into the scene using all configured <see cref="BaseRaycaster">BaseRaycaster</see>s.</para>
			</summary>
			<param name="eventData">Current pointer data.</param>
			<param name="raycastResults">List of 'hits' to populate.</param>
		</member>
		<member name="M:UnityEngine.EventSystems.EventSystem.IsPointerOverGameObject">
			<summary>
				<para>Is the pointer with the given id over an <see cref="EventSystem">EventSystem</see> object?</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventSystem.IsPointerOverGameObject(System.Int32)">
			<summary>
				<para>Is the pointer with the given id over an <see cref="EventSystem">EventSystem</see> object?</para>
			</summary>
			<param name="pointerId">Pointer (touch / mouse) id.</param>
		</member>
		<member name="P:UnityEngine.EventSystems.EventSystem.current">
			<summary>
				<para>Return the current EventSystem.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.EventSystem.sendNavigationEvents">
			<summary>
				<para>Should the EventSystem allow navigation events (move / submit / cancel).</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.EventSystem.pixelDragThreshold">
			<summary>
				<para>The soft area for dragging in pixels.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.EventSystem.currentInputModule">
			<summary>
				<para>The currently active <see cref="BaseInputModule">BaseInputModule</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.EventSystem.firstSelectedGameObject">
			<summary>
				<para>The <see cref="GameObject">GameObject</see> currently considered active by the <see cref="EventSystem">EventSystem</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.EventSystem.currentSelectedGameObject">
			<summary>
				<para>The <see cref="GameObject">GameObject</see> currently considered active by the <see cref="EventSystem">EventSystem</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.EventSystem.lastSelectedGameObject">
			<summary>
				<para>The <see cref="GameObject">GameObject</see> that was selected last.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.EventSystem.alreadySelecting">
			<summary>
				<para>Returns true if the EventSystem is already in a <see cref="EventSystem.SetSelectedGameObject">SetSelectedGameObject</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.EventTrigger">
			<summary>
				<para>Receives events from the EventSystem and calls regiostered functions for each event.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>See <see cref="IPointerEnterHandler.OnPointerEnter">IPointerEnterHandler.OnPointerEnter</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>See <see cref="IPointerExitHandler.OnPointerExit">IPointerExitHandler.OnPointerExit</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>See <see cref="IDragHandler.OnDrag">IDragHandler.OnDrag</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnDrop(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>See <see cref="IDropHandler.OnDrop">IDropHandler.OnDrop</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>See <see cref="IPointerDownHandler.OnPointerDown">IPointerDownHandler.OnPointerDown</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>See <see cref="IPointerUpHandler.OnPointerUp">IPointerUpHandler.OnPointerUp</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>See <see cref="IPointerClickHandler.OnPointerClick">IPointerClickHandler.OnPointerClick</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnSelect(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>See <see cref="ISelectHandler.OnSelect">ISelectHandler.OnSelect</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnDeselect(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>See <see cref="IDeselectHandler.OnDeselect">IDeselectHandler.OnDeselect</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnScroll(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>See <see cref="IScrollHandler.OnScroll">IScrollHandler.OnScroll</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnMove(UnityEngine.EventSystems.AxisEventData)">
			<summary>
				<para>See <see cref="IMoveHandler.OnMove">IMoveHandler.OnMove</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnUpdateSelected(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>See <see cref="IUpdateSelectedHandler.OnUpdateSelected">IUpdateSelectedHandler.OnUpdateSelected</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData)" />
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)" />
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnEndDrag(UnityEngine.EventSystems.PointerEventData)" />
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnSubmit(UnityEngine.EventSystems.BaseEventData)" />
		<member name="M:UnityEngine.EventSystems.EventTrigger.OnCancel(UnityEngine.EventSystems.BaseEventData)" />
		<member name="F:UnityEngine.EventSystems.EventTrigger.delegates">
			<summary>
				<para>All the functions registered in this EventTrigger.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.EventTrigger+TriggerEvent">
			<summary>
				<para>UnityEvent class for Triggers.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.EventTrigger+Entry">
			<summary>
				<para>An Entry in the EventSystem delegates list.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTrigger+Entry.eventID">
			<summary>
				<para>What type of event is the associated callback listening for.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTrigger+Entry.callback">
			<summary>
				<para>The desired <see cref="UnityEvent">UnityEvent</see> to be Invoked.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.EventTriggerType">
			<summary>
				<para>The type of event the <see cref="TriggerEvent">TriggerEvent</see> is intercepting.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.PointerEnter">
			<summary>
				<para>Intercepts a <see cref="IPointerEnterHandler.OnPointerEnter">IPointerEnterHandler.OnPointerEnter</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.PointerExit">
			<summary>
				<para>Intercepts a <see cref="IPointerExitHandler.OnPointerExit">IPointerExitHandler.OnPointerExit</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.PointerDown">
			<summary>
				<para>Intercepts a <see cref="IPointerDownHandler.OnPointerDown">IPointerDownHandler.OnPointerDown</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.PointerUp">
			<summary>
				<para>Intercepts a <see cref="IPointerUpHandler.OnPointerUp">IPointerUpHandler.OnPointerUp</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.PointerClick">
			<summary>
				<para>Intercepts a <see cref="IPointerClickHandler.OnPointerClick">IPointerClickHandler.OnPointerClick</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.Drag">
			<summary>
				<para>Intercepts a <see cref="IDragHandler.OnDrag">IDragHandler.OnDrag</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.Drop">
			<summary>
				<para>Intercepts a <see cref="IDropHandler.OnDrop">IDropHandler.OnDrop</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.Scroll">
			<summary>
				<para>Intercepts a <see cref="IScrollHandler.OnScroll">IScrollHandler.OnScroll</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.UpdateSelected">
			<summary>
				<para>Intercepts a <see cref="IUpdateSelectedHandler.OnUpdateSelected">IUpdateSelectedHandler.OnUpdateSelected</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.Select">
			<summary>
				<para>Intercepts a <see cref="ISelectHandler.OnSelect">ISelectHandler.OnSelect</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.Deselect">
			<summary>
				<para>Intercepts a <see cref="IDeselectHandler.OnDeselect">IDeselectHandler.OnDeselect</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.Move">
			<summary>
				<para>Intercepts a <see cref="IMoveHandler.OnMove">IMoveHandler.OnMove</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.EventTriggerType.InitializePotentialDrag" />
		<member name="F:UnityEngine.EventSystems.EventTriggerType.BeginDrag" />
		<member name="F:UnityEngine.EventSystems.EventTriggerType.EndDrag" />
		<member name="F:UnityEngine.EventSystems.EventTriggerType.Submit" />
		<member name="F:UnityEngine.EventSystems.EventTriggerType.Cancel" />
		<member name="T:UnityEngine.EventSystems.ExecuteEvents">
			<summary>
				<para>Helper class that can be used to send <see cref="IEventSystemHandler">IEventSystemHandler</see> events to GameObjects.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.ExecuteEvents.ValidateEventData``1(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>Attempt to convert the data to type T. If conversion fails an ArgumentException is thrown.</para>
			</summary>
			<param name="data">Data to validate.</param>
		</member>
		<member name="M:UnityEngine.EventSystems.ExecuteEvents.Execute``1(UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData,UnityEngine.EventSystems.ExecuteEvents.EventFunction{``0})">
			<summary>
				<para>Execute the event of type T : <see cref="IEventSystemHandler">IEventSystemHandler</see> on  <see cref="GameObject">GameObject</see>.</para>
			</summary>
			<param name="target">Target <see cref="GameObject">GameObject</see>.</param>
			<param name="eventData">Data associated with the Executing event.</param>
			<param name="functor">Function to execute on the gameObject components.</param>
		</member>
		<member name="M:UnityEngine.EventSystems.ExecuteEvents.ExecuteHierarchy``1(UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData,UnityEngine.EventSystems.ExecuteEvents.EventFunction{``0})">
			<summary>
				<para>Recurse up the hierarcy calling <see cref="ExecuteEvents.Execute">Execute</see>&amp;lt;T&amp;gt; untill there is a GameObject that can handle the event.</para>
			</summary>
			<param name="root">Start <see cref="GameObject">GameObject</see>.</param>
			<param name="eventData">Data associated with the Executing event.</param>
			<param name="callbackFunction">Function to execute on the gameObject components.</param>
		</member>
		<member name="M:UnityEngine.EventSystems.ExecuteEvents.CanHandleEvent``1(UnityEngine.GameObject)">
			<summary>
				<para>Can the given <see cref="GameObject">GameObject</see> handle the <see cref="IEventSystemHandler">IEventSystemHandler</see> of type T.</para>
			</summary>
			<param name="go">GameObject.</param>
		</member>
		<member name="M:UnityEngine.EventSystems.ExecuteEvents.GetEventHandler``1(UnityEngine.GameObject)">
			<summary>
				<para>Starting the hierarchy (starting at root) for a <see cref="GameObject">GameObject</see> that can handle &amp;lt;T&amp;gt;</para>
			</summary>
			<param name="root">Root <see cref="GameObject">GameObject</see>.</param>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.pointerEnterHandler">
			<summary>
				<para>
					<see cref="IPointerEnterHandler">IPointerEnterHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.pointerExitHandler">
			<summary>
				<para>
					<see cref="IPointerExitHandler">IPointerExitHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.pointerDownHandler">
			<summary>
				<para>
					<see cref="IPointerDownHandler">IPointerDownHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.pointerUpHandler">
			<summary>
				<para>
					<see cref="IPointerUpHandler">IPointerUpHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.pointerClickHandler">
			<summary>
				<para>
					<see cref="IPointerClickHandler">IPointerClickHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.initializePotentialDrag">
			<summary>
				<para>
					<see cref="IInitializePotentialDragHandler">IInitializePotentialDragHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.beginDragHandler">
			<summary>
				<para>
					<see cref="IBeginDragHandler">IBeginDragHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.dragHandler">
			<summary>
				<para>
					<see cref="IDragHandler">IDragHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.endDragHandler">
			<summary>
				<para>
					<see cref="IEndDragHandler">IEndDragHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.dropHandler">
			<summary>
				<para>
					<see cref="IDropHandler">IDropHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.scrollHandler">
			<summary>
				<para>
					<see cref="IScrollHandler">IScrollHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.updateSelectedHandler">
			<summary>
				<para>
					<see cref="IUpdateSelectedHandler">IUpdateSelectedHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.selectHandler">
			<summary>
				<para>
					<see cref="ISelectHandler">ISelectHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.deselectHandler">
			<summary>
				<para>
					<see cref="IDeselectHandler">IDeselectHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.moveHandler">
			<summary>
				<para>
					<see cref="IMoveHandler">IMoveHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.submitHandler">
			<summary>
				<para>
					<see cref="ISubmitHandler">ISubmitHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.ExecuteEvents.cancelHandler">
			<summary>
				<para>
					<see cref="ICancelHandler">ICancelHandler</see> execute helper function.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.MoveDirection">
			<summary>
				<para>8 direction movement enum.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.MoveDirection.Left">
			<summary>
				<para>Left.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.MoveDirection.Up">
			<summary>
				<para>Up.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.MoveDirection.Right">
			<summary>
				<para>Right.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.MoveDirection.Down">
			<summary>
				<para>Down.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.MoveDirection.None">
			<summary>
				<para>None.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.RaycastResult">
			<summary>
				<para>A hit result from a <see cref="BaseRaycastModule">BaseRaycastModule</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.RaycastResult.Clear">
			<summary>
				<para>Reset the result.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.RaycastResult.module">
			<summary>
				<para>
					<see cref="BaseInputModule">BaseInputModule</see> that raised the hit.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.RaycastResult.distance">
			<summary>
				<para>Distance to the hit.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.RaycastResult.index">
			<summary>
				<para>Hit index.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.RaycastResult.depth">
			<summary>
				<para>The relative depth of the element.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.RaycastResult.gameObject">
			<summary>
				<para>The <see cref="GameObject">GameObject</see> that was hit by the raycast.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.RaycastResult.isValid">
			<summary>
				<para>Is there an associated module and a hit <see cref="GameObject">GameObject</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.UIBehaviour">
			<summary>
				<para>Base behaviour that has protected implementations of Unity lifecycle functions.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.UIBehaviour.IsActive">
			<summary>
				<para>Returns true if the <see cref="GameObject">GameObject</see> and the <see cref="Component">Component</see> are active.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.UIBehaviour.IsDestroyed">
			<summary>
				<para>Returns true if the native representation of the behaviour has been destroyed.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.AxisEventData">
			<summary>
				<para>Event Data associated with Axis Events (Controller / Keyboard).</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.AxisEventData.moveVector">
			<summary>
				<para>Raw input vector associated with this event.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.AxisEventData.moveDir">
			<summary>
				<para>
					<see cref="MoveDirection">MoveDirection</see> for this event.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.BaseEventData">
			<summary>
				<para>A class that contains the base event data that is common to all event types in the new EventSystem.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.BaseEventData.#ctor(UnityEngine.EventSystems.EventSystem)">
			<summary>
				<para>Construct a <see cref="BaseEventData">BaseEventData</see> tied to the passed <see cref="EventSystem">EventSystem</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.BaseEventData.Reset">
			<summary>
				<para>Reset the Event to the default state.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.BaseEventData.Use">
			<summary>
				<para>Use the event.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.BaseEventData.used">
			<summary>
				<para>Has the event been marked as used?</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.BaseEventData.currentInputModule">
			<summary>
				<para>A reference to the <see cref="BaseInputModule">BaseInputModule</see> that sent this event.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.BaseEventData.selectedObject">
			<summary>
				<para>The object currently considered selected by the <see cref="EventSystem">EventSystem</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.PointerEventData">
			<summary>
				<para>Event payload associated with pointer (mouse / touch) events.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.PointerEventData.IsPointerMoving">
			<summary>
				<para>Is the pointer moving.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.PointerEventData.IsScrolling">
			<summary>
				<para>Is scroll being used on the input device.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.pointerEnter">
			<summary>
				<para>The object that received 'OnPointerEnter'.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.lastPress">
			<summary>
				<para>The GameObject that was pressed on last.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.rawPointerPress">
			<summary>
				<para>The object that the press happened on even if it can not handle the press event.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.pointerDrag">
			<summary>
				<para>The object that is receiving 'OnDrag'.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.pointerCurrentRaycast">
			<summary>
				<para>
					<see cref="RaycastResult">RaycastResult</see> associated with the current event.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.pointerPressRaycast">
			<summary>
				<para>
					<see cref="RaycastResult">RaycastResult</see> associated with the pointer press.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.pointerId">
			<summary>
				<para>Id of the pointer (touch id).</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.position">
			<summary>
				<para>Current pointer position.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.delta">
			<summary>
				<para>Pointer delta since last update.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.pressPosition">
			<summary>
				<para>Position of the press.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.worldPosition">
			<summary>
				<para>World-space position where a ray cast into the screen hits something.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.worldNormal">
			<summary>
				<para>World-space normal where a ray cast into the screen hits something.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.clickTime">
			<summary>
				<para>The last time a click event was sent.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.clickCount">
			<summary>
				<para>Number of clicks in a row.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.scrollDelta">
			<summary>
				<para>The amount of scroll since the last update.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.useDragThreshold">
			<summary>
				<para>Should a drag threshold be used?</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.dragging">
			<summary>
				<para>Is the pointer being dragged.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.button">
			<summary>
				<para>Which input button triggerd the event.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.enterEventCamera">
			<summary>
				<para>The camera associated with the last OnPointerEnter event.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.pressEventCamera">
			<summary>
				<para>The camera associated with the last OnPointerPress event.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PointerEventData.pointerPress">
			<summary>
				<para>The <see cref="GameObject">GameObject</see> that received the OnPointerDown.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.PointerEventData+InputButton">
			<summary>
				<para>Input press tracking.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.PointerEventData+InputButton.Left">
			<summary>
				<para>Left Button.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.PointerEventData+InputButton.Right">
			<summary>
				<para>Right Button.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.PointerEventData+InputButton.Middle">
			<summary>
				<para>Middle Button.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.PointerEventData+FramePressState">
			<summary>
				<para>The state of a press for the given frame.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.PointerEventData+FramePressState.Pressed">
			<summary>
				<para>Button was pressed this frame.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.PointerEventData+FramePressState.Released">
			<summary>
				<para>Button was released this frame.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.PointerEventData+FramePressState.PressedAndReleased">
			<summary>
				<para>Button was pressed and released this frame.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.PointerEventData+FramePressState.NotChanged">
			<summary>
				<para>Same as last frame.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.BaseInputModule">
			<summary>
				<para>A base module that raises events and sends them to <see cref="GameObjects">GameObjects</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.BaseInputModule.Process">
			<summary>
				<para>Process the current tick for the module.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.BaseInputModule.IsPointerOverGameObject(System.Int32)">
			<summary>
				<para>Is the pointer over a GameObject that is controlled by the EventSystem.</para>
			</summary>
			<param name="pointerId">Pointer id.</param>
		</member>
		<member name="M:UnityEngine.EventSystems.BaseInputModule.ShouldActivateModule">
			<summary>
				<para>Should be activated.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.BaseInputModule.DeactivateModule">
			<summary>
				<para>Called when the module is deactivated. Override this if you want custom code to execute when you deactivate your module.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.BaseInputModule.ActivateModule">
			<summary>
				<para>Called when the module is activated. Override this if you want custom code to execute when you activate your module.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.BaseInputModule.UpdateModule">
			<summary>
				<para>Update the internal state of the Module.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.BaseInputModule.IsModuleSupported">
			<summary>
				<para>Check to see if the module is supported. Override this if you have a platfrom specific module (eg. <see cref="TouchInputModule">TouchInputModule</see> that you do not want to activate on standalone.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.PointerInputModule">
			<summary>
				<para>A <see cref="BaseInputModule">BaseInputModule</see> for pointer input.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.PointerInputModule.IsPointerOverGameObject(System.Int32)" />
		<member name="F:UnityEngine.EventSystems.PointerInputModule.kMouseLeftId">
			<summary>
				<para>Id of the cached left mouse pointer event.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.PointerInputModule.kMouseRightId">
			<summary>
				<para>Id of the cached right mouse pointer event.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.PointerInputModule.kMouseMiddleId">
			<summary>
				<para>Id of the cached middle mouse pointer event.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.PointerInputModule.kFakeTouchesId">
			<summary>
				<para>Touch id for when simulating touches on a non touch device.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.PointerInputModule+MouseButtonEventData">
			<summary>
				<para>Information about a mouse button event.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.PointerInputModule+MouseButtonEventData.buttonState">
			<summary>
				<para>The state of the button this frame.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.EventSystems.PointerInputModule+MouseButtonEventData.buttonData">
			<summary>
				<para>Pointer data associated with the mouse event.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.StandaloneInputModule">
			<summary>
				<para>A <see cref="BaseInputModule">BaseInputModule</see> designed for mouse / keyboard / controller input.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.StandaloneInputModule.UpdateModule">
			<summary>
				<para>See <see cref="BaseInputModule">BaseInputModule</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.StandaloneInputModule.IsModuleSupported">
			<summary>
				<para>See <see cref="BaseInputModule">BaseInputModule</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.StandaloneInputModule.ShouldActivateModule">
			<summary>
				<para>See <see cref="BaseInputModule">BaseInputModule</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.StandaloneInputModule.ActivateModule">
			<summary>
				<para>See <see cref="BaseInputModule">BaseInputModule</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.StandaloneInputModule.DeactivateModule">
			<summary>
				<para>See <see cref="BaseInputModule">BaseInputModule</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.StandaloneInputModule.Process">
			<summary>
				<para>See <see cref="BaseInputModule">BaseInputModule</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.StandaloneInputModule.allowActivationOnMobileDevice">
			<summary>
				<para>Is this module allowed to be activated if you are on mobile.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.StandaloneInputModule.inputActionsPerSecond">
			<summary>
				<para>Number of keyboard / controller inputs allowed per second.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.StandaloneInputModule.horizontalAxis">
			<summary>
				<para>Input manager name for the horizontal axis button.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.StandaloneInputModule.verticalAxis">
			<summary>
				<para>Input manager name for the vertical axis.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.StandaloneInputModule.submitButton">
			<summary>
				<para>Maximum number of input events handled per second.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.StandaloneInputModule.cancelButton">
			<summary>
				<para>Input manager name for the 'cancel' button.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.TouchInputModule">
			<summary>
				<para>Input module used for touch based input.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.TouchInputModule.UpdateModule">
			<summary>
				<para>See <see cref="BaseInputModule">BaseInputModule</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.TouchInputModule.IsModuleSupported">
			<summary>
				<para>See <see cref="BaseInputModule">BaseInputModule</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.TouchInputModule.ShouldActivateModule">
			<summary>
				<para>See <see cref="BaseInputModule">BaseInputModule</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.TouchInputModule.Process">
			<summary>
				<para>See <see cref="BaseInputModule">BaseInputModule</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.TouchInputModule.DeactivateModule">
			<summary>
				<para>See <see cref="BaseInputModule">BaseInputModule</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.TouchInputModule.allowActivationOnStandalone">
			<summary>
				<para>Can this module be activated on a standalone platform?</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.BaseRaycaster">
			<summary>
				<para>Base class for any RayCaster.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.BaseRaycaster.Raycast(UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List{UnityEngine.EventSystems.RaycastResult})">
			<summary>
				<para>Raycast against the scene.</para>
			</summary>
			<param name="eventData">Current event data.</param>
			<param name="resultAppendList">List of hit Objects.</param>
		</member>
		<member name="P:UnityEngine.EventSystems.BaseRaycaster.eventCamera">
			<summary>
				<para>The camera that will generate rays for this raycaster.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.BaseRaycaster.sortOrderPriority">
			<summary>
				<para>Priority of the raycaster based upon sort order.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.BaseRaycaster.renderOrderPriority">
			<summary>
				<para>Priority of the raycaster based upon render order.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.Physics2DRaycaster">
			<summary>
				<para>Raycaster for casting against 2D Physics components.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.Physics2DRaycaster.Raycast(UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List{UnityEngine.EventSystems.RaycastResult})" />
		<member name="T:UnityEngine.EventSystems.PhysicsRaycaster">
			<summary>
				<para>Raycaster for casting against 3D Physics components.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.EventSystems.PhysicsRaycaster.Raycast(UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List{UnityEngine.EventSystems.RaycastResult})" />
		<member name="P:UnityEngine.EventSystems.PhysicsRaycaster.eventCamera">
			<summary>
				<para>Get the camera that is used for this module.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PhysicsRaycaster.depth">
			<summary>
				<para>Get the depth of the configured camera.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PhysicsRaycaster.finalEventMask">
			<summary>
				<para>Logical and of <see cref="Camera">Camera</see> mask and <see cref="PhysicsRaycaster-eventMask">eventMask</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.EventSystems.PhysicsRaycaster.eventMask">
			<summary>
				<para>Mask of allowed raycast events.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.AnimationTriggers">
			<summary>
				<para>Structure to store the state of an animation transition on a <see cref="Selectable">Selectable</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.AnimationTriggers.normalTrigger">
			<summary>
				<para>Trigger to send to animator when entering normal state.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.AnimationTriggers.highlightedTrigger">
			<summary>
				<para>Trigger to send to animator when entering highlighted state.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.AnimationTriggers.pressedTrigger">
			<summary>
				<para>Trigger to send to animator when entering pressed state.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.AnimationTriggers.disabledTrigger">
			<summary>
				<para>Trigger to send to animator when entering disabled state.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Button">
			<summary>
				<para>A standard button that can be clicked in order to trigger an event.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Button.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Registered IPointerClickHandler callback.</para>
			</summary>
			<param name="eventData">Data passed in (Typically by the event system).</param>
		</member>
		<member name="M:UnityEngine.UI.Button.OnSubmit(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>Registered ISubmitHandler callback.</para>
			</summary>
			<param name="eventData">Data passed in (Typically by the event system).</param>
		</member>
		<member name="P:UnityEngine.UI.Button.onClick">
			<summary>
				<para>UnityEvent to be fired when the buttons is pressed.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Button+ButtonClickedEvent">
			<summary>
				<para>Function definition for a button click event.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.CanvasUpdate">
			<summary>
				<para>Values of 'update' called on a <see cref="Canvas">Canvas</see> update.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasUpdate.Prelayout">
			<summary>
				<para>Called before layout.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasUpdate.Layout">
			<summary>
				<para>Called for layout.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasUpdate.PostLayout">
			<summary>
				<para>Called after layout.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasUpdate.PreRender">
			<summary>
				<para>Called before rendering.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasUpdate.LatePreRender">
			<summary>
				<para>Called late, before render.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasUpdate.MaxUpdateValue">
			<summary>
				<para>Max enum value.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ICanvasElement">
			<summary>
				<para>This is an element that can live on a Canvas.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ICanvasElement.Rebuild(UnityEngine.UI.CanvasUpdate)">
			<summary>
				<para>Rebuild the element for the given stage.</para>
			</summary>
			<param name="executing">Stage being rebuild.</param>
		</member>
		<member name="M:UnityEngine.UI.ICanvasElement.IsDestroyed">
			<summary>
				<para>Return true if the element is considered destroyed.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ICanvasElement.transform">
			<summary>
				<para>Get the transform associated with the ICanvasElement.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.CanvasUpdateRegistry">
			<summary>
				<para>A place where CanvasElements can register themselves for rebuilding.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.CanvasUpdateRegistry.RegisterCanvasElementForLayoutRebuild(UnityEngine.UI.ICanvasElement)">
			<summary>
				<para>Rebuild the layout of the given element.</para>
			</summary>
			<param name="element">Element to rebuild.</param>
		</member>
		<member name="M:UnityEngine.UI.CanvasUpdateRegistry.RegisterCanvasElementForGraphicRebuild(UnityEngine.UI.ICanvasElement)">
			<summary>
				<para>Rebuild the graphics of the given element.</para>
			</summary>
			<param name="element">Element to rebuild.</param>
		</member>
		<member name="M:UnityEngine.UI.CanvasUpdateRegistry.UnRegisterCanvasElementForRebuild(UnityEngine.UI.ICanvasElement)">
			<summary>
				<para>Remove the given element from rebuild.</para>
			</summary>
			<param name="element">Element to remove.</param>
		</member>
		<member name="M:UnityEngine.UI.CanvasUpdateRegistry.IsRebuildingLayout">
			<summary>
				<para>Is layout being rebuilt?</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.CanvasUpdateRegistry.IsRebuildingGraphics">
			<summary>
				<para>Are graphics being rebuild.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.CanvasUpdateRegistry.instance">
			<summary>
				<para>Get the singleton registry.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ColorBlock">
			<summary>
				<para>Structure to store the state of a color transition on a <see cref="Selectable">Selectable</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ColorBlock.normalColor">
			<summary>
				<para>Normal Color.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ColorBlock.highlightedColor">
			<summary>
				<para>Highlighted Color.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ColorBlock.pressedColor">
			<summary>
				<para>Pressed Color.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ColorBlock.disabledColor">
			<summary>
				<para>Disabled Color.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ColorBlock.colorMultiplier">
			<summary>
				<para>Multiplier applied to colors (allows brightening greater then base color).</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ColorBlock.fadeDuration">
			<summary>
				<para>How long a color transition should take.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ColorBlock.defaultColorBlock">
			<summary>
				<para>Simple getter for the default ColorBlock.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.FontData">
			<summary>
				<para>Struct for storing <see cref="Text">Text</see> generation settings.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.FontData.defaultFontData">
			<summary>
				<para>Get a font data with sensible defaults.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.FontData.font">
			<summary>
				<para>Font to use.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.FontData.fontSize">
			<summary>
				<para>Font size.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.FontData.fontStyle">
			<summary>
				<para>Font Style.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.FontData.bestFit">
			<summary>
				<para>Is best fit used.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.FontData.minSize">
			<summary>
				<para>Minimum text size.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.FontData.maxSize">
			<summary>
				<para>Maximum text size.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.FontData.alignment">
			<summary>
				<para>How is the text aligned.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.FontData.richText">
			<summary>
				<para>Should RichText be used?</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.FontData.horizontalOverflow">
			<summary>
				<para>Horizontal overflow mode.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.FontData.verticalOverflow">
			<summary>
				<para>Vertical overflow mode.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.FontData.lineSpacing">
			<summary>
				<para>Line spacing.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.FontUpdateTracker">
			<summary>
				<para>Class to track all Text that is used within the a UI.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.FontUpdateTracker.TrackText(UnityEngine.UI.Text)">
			<summary>
				<para>Track the font associated with the given Text.</para>
			</summary>
			<param name="t">Text to track.</param>
		</member>
		<member name="M:UnityEngine.UI.FontUpdateTracker.UntrackText(UnityEngine.UI.Text)">
			<summary>
				<para>Untrack the font associated with the given Text.</para>
			</summary>
			<param name="t">Text to untrack.</param>
		</member>
		<member name="T:UnityEngine.UI.Graphic">
			<summary>
				<para>Base class for all visual UI Component.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Graphic.SetAllDirty">
			<summary>
				<para>Mark the Graphic as dirty.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Graphic.SetLayoutDirty">
			<summary>
				<para>Mark the layout as dirty.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Graphic.SetVerticesDirty">
			<summary>
				<para>Mark the vertices as dirty.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Graphic.SetMaterialDirty">
			<summary>
				<para>Mark the <see cref="Material">Material</see> as dirty.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Graphic.Rebuild(UnityEngine.UI.CanvasUpdate)">
			<summary>
				<para>Rebuilds the graphic geometry and its material on the PreRender cycle.</para>
			</summary>
			<param name="update">The current step of the rendering <see cref="CanvasUpdate">CanvasUpdate</see> cycle.</param>
		</member>
		<member name="M:UnityEngine.UI.Graphic.OnRebuildRequested">
			<summary>
				<para>Editor only callback that is issued by Unity if a rebuild of the <see cref="Graphic">Graphic</see> is required.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Graphic.SetNativeSize">
			<summary>
				<para>Adjusts the graphic size to make it pixel-perfect.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Graphic.Raycast(UnityEngine.Vector2,UnityEngine.Camera)">
			<summary>
				<para>When a <see cref="GraphicRaycaster">GraphicRaycaster</see> is raycasting into the scene it will first filter the elments using their <see cref="RectTransform">RectTransform</see> rect and then it will use this function to determine the elements hit mby the raycast.</para>
			</summary>
			<param name="sp">Screen point.</param>
			<param name="eventCamera">Camera.</param>
		</member>
		<member name="M:UnityEngine.UI.Graphic.PixelAdjustPoint(UnityEngine.Vector2)">
			<summary>
				<para>Adjusts the given pixel to be pixel perfect.</para>
			</summary>
			<param name="point">Local space point.</param>
		</member>
		<member name="M:UnityEngine.UI.Graphic.GetPixelAdjustedRect">
			<summary>
				<para>Returns a pixel perfect Rect closest to the Graphic RectTransform.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Graphic.CrossFadeColor(UnityEngine.Color,System.Single,System.Boolean,System.Boolean)">
			<summary>
				<para>Tweens the CanvasRenderer color associated with this Graphic.</para>
			</summary>
			<param name="targetColor">Target color.</param>
			<param name="duration">Tween duration.</param>
			<param name="ignoreTimeScale">Should ignore <see cref="Time-scale">Time.scale</see>?</param>
			<param name="useAlpha">Should also Tween the alpha channel?</param>
		</member>
		<member name="M:UnityEngine.UI.Graphic.CrossFadeAlpha(System.Single,System.Single,System.Boolean)">
			<summary>
				<para>Tweens the alpha of the CanvasRenderer color associated with this Graphic.</para>
			</summary>
			<param name="alpha">Target alpha.</param>
			<param name="duration">Duration of the tween in seconds.</param>
			<param name="ignoreTimeScale">Should ignore <see cref="Time-scale">Time.scale</see>?</param>
		</member>
		<member name="M:UnityEngine.UI.Graphic.RegisterDirtyLayoutCallback(UnityEngine.Events.UnityAction)">
			<summary>
				<para>Add a listener to receive notification when the graphics layout are dirtied.</para>
			</summary>
			<param name="action">The delegate function to call.</param>
		</member>
		<member name="M:UnityEngine.UI.Graphic.UnregisterDirtyLayoutCallback(UnityEngine.Events.UnityAction)">
			<summary>
				<para>Remove a listener from receiving notifications when the graphics layout is dirtied.</para>
			</summary>
			<param name="action">The delegate function to remove.</param>
		</member>
		<member name="M:UnityEngine.UI.Graphic.RegisterDirtyVerticesCallback(UnityEngine.Events.UnityAction)">
			<summary>
				<para>Add a listener to receive notification when the graphics vertices are dirtied.</para>
			</summary>
			<param name="action">The delegate function to call.</param>
		</member>
		<member name="M:UnityEngine.UI.Graphic.UnregisterDirtyVerticesCallback(UnityEngine.Events.UnityAction)">
			<summary>
				<para>Remove a listener from receiving notifications when the graphics vertices are dirtied.</para>
			</summary>
			<param name="action">The delegate function to remove.</param>
		</member>
		<member name="M:UnityEngine.UI.Graphic.RegisterDirtyMaterialCallback(UnityEngine.Events.UnityAction)">
			<summary>
				<para>Add a listener to receive notification when the graphics material are dirtied.</para>
			</summary>
			<param name="action">The delegate function to call.</param>
		</member>
		<member name="M:UnityEngine.UI.Graphic.UnregisterDirtyMaterialCallback(UnityEngine.Events.UnityAction)">
			<summary>
				<para>Remove a listener from receiving notifications when the graphics material is dirtied.</para>
			</summary>
			<param name="action">The delegate function to remove.</param>
		</member>
		<member name="P:UnityEngine.UI.Graphic.defaultGraphicMaterial">
			<summary>
				<para>Default material used to draw UI elements if no explicit material was specified.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Graphic.color">
			<summary>
				<para>Base color of the Graphic.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Graphic.depth">
			<summary>
				<para>Absolute depth of the graphic in the hierarchy, used by rendering and events.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Graphic.rectTransform">
			<summary>
				<para>The <see cref="RectTransform">RectTransform</see> component used by the Graphic.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Graphic.canvas">
			<summary>
				<para>A reference to the Canvas this Graphic is rendering to.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Graphic.canvasRenderer">
			<summary>
				<para>The CanvasRenderer used by this Graphic.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Graphic.defaultMaterial">
			<summary>
				<para>Returns the default material for the graphic.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Graphic.material">
			<summary>
				<para>The <see cref="Material">Material</see> set by the user.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Graphic.materialForRendering">
			<summary>
				<para>The material that will be sent for Rendering (Read only).</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Graphic.mainTexture">
			<summary>
				<para>The graphic's texture. (Read Only).</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.GraphicRaycaster">
			<summary>
				<para>A <see cref="BaseRaycaster">BaseRaycaster</see> to raycast against Graphic elements.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.GraphicRaycaster.Raycast(UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List{UnityEngine.EventSystems.RaycastResult})" />
		<member name="F:UnityEngine.UI.GraphicRaycaster.ignoreReversedGraphics">
			<summary>
				<para>Should graphics facing away from the raycaster be considered?</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GraphicRaycaster.blockingObjects">
			<summary>
				<para>Type of objects that will block graphic raycasts.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.GraphicRaycaster.sortOrderPriority" />
		<member name="P:UnityEngine.UI.GraphicRaycaster.renderOrderPriority" />
		<member name="P:UnityEngine.UI.GraphicRaycaster.eventCamera" />
		<member name="T:UnityEngine.UI.GraphicRaycaster+BlockingObjects">
			<summary>
				<para>List of Raycasters to check for canvas blocking elements.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GraphicRaycaster+BlockingObjects.None">
			<summary>
				<para>Not blocked.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GraphicRaycaster+BlockingObjects.TwoD">
			<summary>
				<para>2D physics blocking.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GraphicRaycaster+BlockingObjects.ThreeD">
			<summary>
				<para>3D physics blocking.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GraphicRaycaster+BlockingObjects.All">
			<summary>
				<para>Blocked by 2D and 3D.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.GraphicRebuildTracker">
			<summary>
				<para>EditorOnly class for tracking all Graphics.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.GraphicRebuildTracker.TrackGraphic(UnityEngine.UI.Graphic)">
			<summary>
				<para>Graphic to track.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.GraphicRebuildTracker.UnTrackGraphic(UnityEngine.UI.Graphic)">
			<summary>
				<para>Graphic to untrack.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.GraphicRegistry">
			<summary>
				<para>Registry which maps a <see cref="Graphic">Graphic</see> to the canvas it belongs to.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.GraphicRegistry.RegisterGraphicForCanvas(UnityEngine.Canvas,UnityEngine.UI.Graphic)">
			<summary>
				<para>Store a link between the given canvas and graphic in the registry.</para>
			</summary>
			<param name="c">Canvas to register.</param>
			<param name="graphic">Graphic to register.</param>
		</member>
		<member name="M:UnityEngine.UI.GraphicRegistry.UnregisterGraphicForCanvas(UnityEngine.Canvas,UnityEngine.UI.Graphic)">
			<summary>
				<para>Deregister the given <see cref="Graphic">Graphic</see> from a <see cref="Canvas">Canvas</see>.</para>
			</summary>
			<param name="c">Canvas.</param>
			<param name="graphic">Graphic to deregister.</param>
		</member>
		<member name="M:UnityEngine.UI.GraphicRegistry.GetGraphicsForCanvas(UnityEngine.Canvas)">
			<summary>
				<para>Return a list of <see cref="Graphic">Graphic</see>s that are registered on the <see cref="Canvas">Canvas</see>.</para>
			</summary>
			<param name="canvas">Input canvas.</param>
		</member>
		<member name="P:UnityEngine.UI.GraphicRegistry.instance">
			<summary>
				<para>Singleton instance.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Image">
			<summary>
				<para>Displays a <see cref="Sprite">Sprite</see> for the UI System.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Image.OnBeforeSerialize">
			<summary>
				<para>Serialization Callback.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Image.OnAfterDeserialize">
			<summary>
				<para>Serialization Callback.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Image.SetNativeSize">
			<summary>
				<para>Adjusts the image size to make it pixel-perfect.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Image.CalculateLayoutInputHorizontal">
			<summary>
				<para>See <see cref="ILayoutElement.CalculateLayoutInputHorizontal">ILayoutElement.CalculateLayoutInputHorizontal</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Image.CalculateLayoutInputVertical">
			<summary>
				<para>See <see cref="ILayoutElement.CalculateLayoutInputVertical">ILayoutElement.CalculateLayoutInputVertical</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Image.IsRaycastLocationValid(UnityEngine.Vector2,UnityEngine.Camera)">
			<summary>
				<para>See: <see cref="ICanvasRaycastFilter">ICanvasRaycastFilter</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.sprite">
			<summary>
				<para>The sprite that is used to render this image.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.overrideSprite">
			<summary>
				<para>Set an override sprite to be used for rendering.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.type">
			<summary>
				<para>How the Image is draw.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.preserveAspect">
			<summary>
				<para>Whether this image should preserve its Sprite aspect ratio.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.fillCenter">
			<summary>
				<para>Whether or not to render the center of a Tiled or Sliced image.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.fillMethod">
			<summary>
				<para>What type of fill method to use.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.fillAmount">
			<summary>
				<para>Amount of the Image shown when the <see cref="Image-type">Image.type</see> is set to <see cref="Image.Type.Filled">Image.Type.Filled</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.fillClockwise">
			<summary>
				<para>Whether the Image should be filled clockwise (true) or counter-clockwise (false).</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.fillOrigin">
			<summary>
				<para>Controls the origin point of the Fill process. Value means different things with each fill method.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.eventAlphaThreshold">
			<summary>
				<para>The alpha threshold specifying the minimum alpha a pixel must have for the event to be passed through.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.mainTexture">
			<summary>
				<para>The image's texture. (ReadOnly).</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.hasBorder">
			<summary>
				<para>True if the sprite used has borders.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.pixelsPerUnit">
			<summary>
				<para>The number of pixels in the Image that correspond to one unit in world space. (Read Only)</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.minWidth">
			<summary>
				<para>See <see cref="ILayoutElement-minWidth">ILayoutElement.minWidth</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.preferredWidth">
			<summary>
				<para>See <see cref="ILayoutElement-preferredWidth">ILayoutElement.preferredWidth</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.flexibleWidth">
			<summary>
				<para>See <see cref="ILayoutElement-flexibleWidth">ILayoutElement.flexibleWidth</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.minHeight">
			<summary>
				<para>See <see cref="ILayoutElement-minHeight">ILayoutElement.minHeight</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.preferredHeight">
			<summary>
				<para>See <see cref="ILayoutElement-preferredHeight">ILayoutElement.preferredHeight</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.flexibleHeight">
			<summary>
				<para>See <see cref="ILayoutElement-flexibleHeight">ILayoutElement.flexibleHeight</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Image.layoutPriority">
			<summary>
				<para>See <see cref="ILayoutElement-layoutPriority">ILayoutElement.layoutPriority</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Image+Type">
			<summary>
				<para>Image Type.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Type.Simple">
			<summary>
				<para>Stretches the image uniformly inside the rectangle.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Type.Sliced">
			<summary>
				<para>Stretches the center part of the image that is inside the borders, while the border areas maintain their thickness.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Type.Tiled">
			<summary>
				<para>Tiles the center part of the image that is inside the borders.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Type.Filled">
			<summary>
				<para>Stretches the image uniformly inside the rectangle and shows only a portion of the image.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Image+FillMethod">
			<summary>
				<para>Fill method to be used by the <see cref="Image">Image</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+FillMethod.Horizontal">
			<summary>
				<para>The Image will be filled Horizontally.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+FillMethod.Vertical">
			<summary>
				<para>The Image will be filled Vertically.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+FillMethod.Radial90">
			<summary>
				<para>The Image will be filled Radially with the radial center in one of the corners.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+FillMethod.Radial180">
			<summary>
				<para>The Image will be filled Radially with the radial center in one of the edges.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+FillMethod.Radial360">
			<summary>
				<para>The Image will be filled Radially with the radial center at the center.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Image+OriginHorizontal">
			<summary>
				<para>Origin for the <see cref="Image.FillMethod.Horizontal">Image.FillMethod.Horizontal</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+OriginHorizontal.Left">
			<summary>
				<para>Origin at the Left side.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+OriginHorizontal.Right">
			<summary>
				<para>Origin at the Right side.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Image+OriginVertical">
			<summary>
				<para>Origin for the <see cref="Image.FillMethod.Vertical">Image.FillMethod.Vertical</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+OriginVertical.Bottom">
			<summary>
				<para>Origin at the Bottom edge.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+OriginVertical.Top">
			<summary>
				<para>Origin at the Top edge.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Image+Origin90">
			<summary>
				<para>Origin for the <see cref="Image.FillMethod.Radial90">Image.FillMethod.Radial90</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Origin90.BottomLeft">
			<summary>
				<para>Radial starting at the Bottom Left corner.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Origin90.TopLeft">
			<summary>
				<para>Radial starting at the Top Left corner.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Origin90.TopRight">
			<summary>
				<para>Radial starting at the Top Right corner.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Origin90.BottomRight">
			<summary>
				<para>Radial starting at the Bottom Right corner.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Image+Origin180">
			<summary>
				<para>Origin for the <see cref="Image.FillMethod.Radial180">Image.FillMethod.Radial180</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Origin180.Bottom">
			<summary>
				<para>Center of the radial at the center of the Bottom edge.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Origin180.Left">
			<summary>
				<para>Center of the radial at the center of the Left edge.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Origin180.Top">
			<summary>
				<para>Center of the radial at the center of the Top edge.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Origin180.Right">
			<summary>
				<para>Center of the radial at the center of the Right edge.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Image+Origin360">
			<summary>
				<para>One of the points of the Arc for the <see cref="Image.FillMethod.Radial360">Image.FillMethod.Radial360</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Origin360.Bottom">
			<summary>
				<para>Arc starting at the center of the Bottom edge.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Origin360.Right">
			<summary>
				<para>Arc starting at the center of the Right edge.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Origin360.Top">
			<summary>
				<para>Arc starting at the center of the Top edge.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Image+Origin360.Left">
			<summary>
				<para>Arc starting at the center of the Left edge.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.IMask">
			<summary>
				<para>Is this element a mask.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.IMask.MaskEnabled">
			<summary>
				<para>Is the mask enabled.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.IMaskable">
			<summary>
				<para>This element is capable of being masked out.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.IMaskable.ParentMaskStateChanged">
			<summary>
				<para>Callback for when parent state changes.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.InputField">
			<summary>
				<para>Turn a simple label into a interactable input field.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.InputField.MoveTextEnd(System.Boolean)">
			<summary>
				<para>Move the caret index to end of text.</para>
			</summary>
			<param name="shift">Only move the selectionPosition.</param>
		</member>
		<member name="M:UnityEngine.UI.InputField.MoveTextStart(System.Boolean)">
			<summary>
				<para>Move the caret index to start of text.</para>
			</summary>
			<param name="shift">Only move the selectionPosition.</param>
		</member>
		<member name="M:UnityEngine.UI.InputField.ScreenToLocal(UnityEngine.Vector2)">
			<summary>
				<para>Convert screen space into input field local space.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.InputField.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)" />
		<member name="M:UnityEngine.UI.InputField.OnDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>What to do when the event system send a Drag Event.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.InputField.OnEndDrag(UnityEngine.EventSystems.PointerEventData)" />
		<member name="M:UnityEngine.UI.InputField.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>What to do when the event system send a pointer down Event.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.InputField.ProcessEvent(UnityEngine.Event)" />
		<member name="M:UnityEngine.UI.InputField.OnUpdateSelected(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>What to do when the event system send a Update selected Event.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.InputField.Rebuild(UnityEngine.UI.CanvasUpdate)">
			<summary>
				<para>Rebuild the input fields geometry. (caret and highlight).</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.InputField.ActivateInputField" />
		<member name="M:UnityEngine.UI.InputField.OnSelect(UnityEngine.EventSystems.BaseEventData)" />
		<member name="M:UnityEngine.UI.InputField.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>What to do when the event system send a pointer click Event.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.InputField.DeactivateInputField" />
		<member name="M:UnityEngine.UI.InputField.OnDeselect(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>What to do when the event system send a Deselect Event.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.InputField.OnSubmit(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>What to do when the event system send a submit Event.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.shouldHideMobileInput" />
		<member name="P:UnityEngine.UI.InputField.text">
			<summary>
				<para>The current value of the input field.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.isFocused" />
		<member name="P:UnityEngine.UI.InputField.caretBlinkRate">
			<summary>
				<para>The blinking rate of the input caret, defined as the number of times per second it changes state between visible and not visible.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.textComponent" />
		<member name="P:UnityEngine.UI.InputField.placeholder">
			<summary>
				<para>Optional graphic to show when the InputField text is empty.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.selectionColor">
			<summary>
				<para>The color of the highlighter to show what characters are selected.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.onEndEdit">
			<summary>
				<para>The Unity Event to call when the user has ended editing the text by pressing submit or clicking outside the Input Field.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.onValueChange" />
		<member name="P:UnityEngine.UI.InputField.onValidateInput">
			<summary>
				<para>The function to call to validate the input characters.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.characterLimit">
			<summary>
				<para>How many characters the input field limited to. 0 = infinite.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.contentType">
			<summary>
				<para>Specifies the type of the input text content.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.lineType" />
		<member name="P:UnityEngine.UI.InputField.inputType">
			<summary>
				<para>The type of input expected. See InputField.InputType.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.keyboardType">
			<summary>
				<para>They type of mobile keyboard that will be used.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.characterValidation">
			<summary>
				<para>The type of validation to perform on a character.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.multiLine">
			<summary>
				<para>If the input field supports multiple lines.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.asteriskChar">
			<summary>
				<para>The character used for password fields.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.InputField.wasCanceled" />
		<member name="T:UnityEngine.UI.InputField+ContentType">
			<summary>
				<para>Specifies the type of the input text content.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+ContentType.Standard">
			<summary>
				<para>Allows all input.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+ContentType.Autocorrected">
			<summary>
				<para>Allows all input and performs auto-correction on platforms that support it.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+ContentType.IntegerNumber">
			<summary>
				<para>Allow whole numbers (positive or negative).</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+ContentType.DecimalNumber">
			<summary>
				<para>Allows decimal numbers (positive or negative).</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+ContentType.Alphanumeric">
			<summary>
				<para>Allows letters A-Z, a-z and numbers 0-9.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+ContentType.Name">
			<summary>
				<para>The InputField is used for typing in a name and enforces capitalization.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+ContentType.EmailAddress">
			<summary>
				<para>The input is used for typing in an email address.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+ContentType.Password">
			<summary>
				<para>Allows all input and hides the typed characters by showing them as asterisks characters.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+ContentType.Pin">
			<summary>
				<para>Allows integer numbers and hides the typed characters by showing them as asterisks characters.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+ContentType.Custom">
			<summary>
				<para>Custom types that allows user-defined settings.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.InputField+InputType">
			<summary>
				<para>Type of data expected by the input field.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+InputType.Standard">
			<summary>
				<para>The standard mobile keyboard.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+InputType.AutoCorrect">
			<summary>
				<para>The mobile autocorrect keyboard.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+InputType.Password">
			<summary>
				<para>The mobile password keyboard.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.InputField+CharacterValidation">
			<summary>
				<para>The type of characters that are allowed to be added to the string.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+CharacterValidation.None">
			<summary>
				<para>No validation. Any input is valid.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+CharacterValidation.Integer">
			<summary>
				<para>Allow whole numbers (positive or negative).</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+CharacterValidation.Decimal">
			<summary>
				<para>Allows decimal numbers (positive or negative).</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+CharacterValidation.Alphanumeric">
			<summary>
				<para>Allows letters A-Z, a-z and numbers 0-9.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+CharacterValidation.Name">
			<summary>
				<para>Only allow names and enforces capitalization.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.InputField+CharacterValidation.EmailAddress">
			<summary>
				<para>Allows the characters that are allowed in an email address.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.InputField+LineType" />
		<member name="F:UnityEngine.UI.InputField+LineType.SingleLine" />
		<member name="F:UnityEngine.UI.InputField+LineType.MultiLineSubmit" />
		<member name="F:UnityEngine.UI.InputField+LineType.MultiLineNewline" />
		<member name="T:UnityEngine.UI.InputField+SubmitEvent">
			<summary>
				<para>Unity Event with a inputfield as a param.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.InputField+OnChangeEvent" />
		<member name="T:UnityEngine.UI.MaskableGraphic">
			<summary>
				<para>A <see cref="Graphic">Graphic</see> that is capable of being mased out.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.MaskableGraphic.ParentMaskStateChanged">
			<summary>
				<para>See: <see cref="IMaskable">IMaskable</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.MaskableGraphic.SetMaterialDirty" />
		<member name="P:UnityEngine.UI.MaskableGraphic.maskable">
			<summary>
				<para>Does this graphic allow masking.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.MaskableGraphic.material">
			<summary>
				<para>Generates a material from the user supplied material that is capable of being masked.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Navigation">
			<summary>
				<para>Structure storing details related to navigation.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Navigation.mode">
			<summary>
				<para>Navitation mode.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Navigation.selectOnUp">
			<summary>
				<para>Selectable to select on up.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Navigation.selectOnDown">
			<summary>
				<para>Selectable to select on down.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Navigation.selectOnLeft">
			<summary>
				<para>Selectable to select on left.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Navigation.selectOnRight">
			<summary>
				<para>Selectable to select on right.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Navigation.defaultNavigation">
			<summary>
				<para>Return a <see cref="Navigation">Navigation</see> with sensible default values.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Navigation+Mode">
			<summary>
				<para>Navigation mode. Used by <see cref="Selectable">Selectable</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Navigation+Mode.None">
			<summary>
				<para>No navigation.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Navigation+Mode.Horizontal">
			<summary>
				<para>Horizontal Navigation.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Navigation+Mode.Vertical">
			<summary>
				<para>Vertical navigation.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Navigation+Mode.Automatic">
			<summary>
				<para>Automatic navigation.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Navigation+Mode.Explicit">
			<summary>
				<para>Explicit navigaion.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.RawImage">
			<summary>
				<para>Displays a <see cref="Texture2D">Texture2D</see> for the UI System.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.RawImage.SetNativeSize">
			<summary>
				<para>Adjusts the raw image size to make it pixel-perfect.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.RawImage.mainTexture">
			<summary>
				<para>The RawImage's texture. (ReadOnly).</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.RawImage.texture">
			<summary>
				<para>The RawImage's texture.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.RawImage.uvRect">
			<summary>
				<para>The RawImage texture coordinates.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Scrollbar">
			<summary>
				<para>A standard scrollbar with a variable sized handle that can be dragged between 0 and 1.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Scrollbar.Rebuild(UnityEngine.UI.CanvasUpdate)">
			<summary>
				<para>Handling for when the canvas is rebuilt.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Scrollbar.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Handling for when the scrollbar value is begin being dragged.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Scrollbar.OnDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Handling for when the scrollbar value is dragged.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Scrollbar.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Handling for when the pointer is pressed down on the scrollbar.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Scrollbar.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Handling for when the pointer is released from the scrollbar.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Scrollbar.OnMove(UnityEngine.EventSystems.AxisEventData)">
			<summary>
				<para>Handling for movement events.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Scrollbar.FindSelectableOnLeft">
			<summary>
				<para>See member in base class.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Scrollbar.FindSelectableOnRight">
			<summary>
				<para>See member in base class.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Scrollbar.FindSelectableOnUp">
			<summary>
				<para>See member in base class.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Scrollbar.FindSelectableOnDown">
			<summary>
				<para>See member in base class.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Scrollbar.OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>See:<see cref="IInitializePotentialDragHandler">IInitializePotentialDragHandler</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Scrollbar.SetDirection(UnityEngine.UI.Scrollbar.Direction,System.Boolean)">
			<summary>
				<para>Set the direction of the scrollbar, optionally setting the layout as well.</para>
			</summary>
			<param name="direction">The direction of the scrollbar.</param>
			<param name="includeRectLayouts">Should the layout be flipped together with the direction?</param>
		</member>
		<member name="P:UnityEngine.UI.Scrollbar.handleRect">
			<summary>
				<para>The RectTransform to use for the handle.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Scrollbar.direction">
			<summary>
				<para>The direction of the scrollbar from minimum to maximum value.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Scrollbar.value">
			<summary>
				<para>The current value of the scrollbar, between 0 and 1.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Scrollbar.size">
			<summary>
				<para>The size of the scrollbar handle where 1 means it fills the entire scrollbar.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Scrollbar.numberOfSteps">
			<summary>
				<para>The number of steps to use for the value. A value of 0 disables use of steps.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Scrollbar.onValueChanged">
			<summary>
				<para>Handling for when the scrollbar value is changed.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Scrollbar+Direction">
			<summary>
				<para>Setting that indicates one of four directions.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Scrollbar+Direction.LeftToRight">
			<summary>
				<para>From left to right.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Scrollbar+Direction.RightToLeft">
			<summary>
				<para>From right to left.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Scrollbar+Direction.BottomToTop">
			<summary>
				<para>From bottom to top.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Scrollbar+Direction.TopToBottom">
			<summary>
				<para>From top to bottom.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Scrollbar+ScrollEvent">
			<summary>
				<para>
					<see cref="UnityEvent">UnityEvent</see> callback for when a scrollbar is scrolled.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ScrollRect">
			<summary>
				<para>A component for making a child RectTransform scroll.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ScrollRect.Rebuild(UnityEngine.UI.CanvasUpdate)">
			<summary>
				<para>Rebuilds the scroll rect data after initialization.</para>
			</summary>
			<param name="executing">The current step of the rendering CanvasUpdate cycle.</param>
		</member>
		<member name="M:UnityEngine.UI.ScrollRect.IsActive">
			<summary>
				<para>See member in base class.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ScrollRect.StopMovement">
			<summary>
				<para>Sets the velocity to zero on both axes so the content stops moving.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ScrollRect.OnScroll(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Handling for when the content is being scrolled.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ScrollRect.OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>See:<see cref="IInitializePotentialDragHandler">IInitializePotentialDragHandler</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ScrollRect.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Handling for when the content is beging being dragged.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ScrollRect.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Handling for when the content has finished being dragged.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ScrollRect.OnDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Handling for when the content is dragged.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.content">
			<summary>
				<para>The content that can be scrolled. It should be a child of the GameObject with ScrollRect on it.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.horizontal">
			<summary>
				<para>Should horizontal scrolling be enabled?</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.vertical">
			<summary>
				<para>Should vertical scrolling be enabled?</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.movementType">
			<summary>
				<para>The behavior to use when the content moves beyond the scroll rect.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.elasticity">
			<summary>
				<para>The amount of elasticity to use when the content moves beyond the scroll rect.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.inertia">
			<summary>
				<para>Does the scrolling have intertia?</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.decelerationRate">
			<summary>
				<para>The rate at which movement slows down.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.scrollSensitivity">
			<summary>
				<para>The sensitivity to scroll wheel and track pad scroll events.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.horizontalScrollbar">
			<summary>
				<para>Optional <see cref="Scrollbar">Scrollbar</see> object linked to the horizontal scrolling of the ScrollRect.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.verticalScrollbar">
			<summary>
				<para>Optional <see cref="Scrollbar">Scrollbar</see> object linked to the vertical scrolling of the ScrollRect.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.onValueChanged">
			<summary>
				<para>Callback executed when the scroll position of the slider is changed.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.velocity">
			<summary>
				<para>The current velocity of the content.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.normalizedPosition">
			<summary>
				<para>The scroll position as a <see cref="Vector2">Vector2</see> between (0,0) and (1,1) with (0,0) being the lower left corner.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.horizontalNormalizedPosition">
			<summary>
				<para>The horizontal scroll position as a value between 0 and 1, with 0 being at the bottom.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ScrollRect.verticalNormalizedPosition">
			<summary>
				<para>The vertical scroll position as a value between 0 and 1, with 0 being at the left side.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ScrollRect+MovementType">
			<summary>
				<para>A setting for which behavior to use when content moves beyond the confines of its container.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.ScrollRect+MovementType.Unrestricted">
			<summary>
				<para>Unrestricted movement. The content can move forever.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.ScrollRect+MovementType.Elastic">
			<summary>
				<para>Elastic movement. The content is allowed to temporarily move beyond the container, but is pulled back elastically.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.ScrollRect+MovementType.Clamped">
			<summary>
				<para>Clamped movement. The content can not be moved beyond its container.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ScrollRect+ScrollRectEvent">
			<summary>
				<para>Event type used by the <see cref="ScrollRect">ScrollRect</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Selectable">
			<summary>
				<para>Simple selectable object - derived from to create a selectable control.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Selectable.IsInteractable">
			<summary>
				<para>Is the Selectable interactable (considers <see cref="CanvasGroup">CanvasGroup</see> and ref:interactable.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Selectable.FindSelectable(UnityEngine.Vector3)">
			<param name="dir">The direction in which to search for a neighbouring Selectable object.</param>
		</member>
		<member name="M:UnityEngine.UI.Selectable.FindSelectableOnLeft">
			<summary>
				<para>Find the selectable object to the left of this one.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Selectable.FindSelectableOnRight">
			<summary>
				<para>Find the selectable object to the right of this one.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Selectable.FindSelectableOnUp">
			<summary>
				<para>Find the selectable object above this one.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Selectable.FindSelectableOnDown">
			<summary>
				<para>Find the selectable object below this one.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Selectable.OnMove(UnityEngine.EventSystems.AxisEventData)">
			<summary>
				<para>Determine in which of the 4 move directions the next selectable object should be found.</para>
			</summary>
			<param name="eventData">The EventData usually sent by the EventSystem.</param>
		</member>
		<member name="M:UnityEngine.UI.Selectable.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Evaluate current state and transition to pressed state.</para>
			</summary>
			<param name="eventData">The EventData usually sent by the EventSystem.</param>
		</member>
		<member name="M:UnityEngine.UI.Selectable.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Evaluate eventData and transition to appropriate state.</para>
			</summary>
			<param name="eventData">The EventData usually sent by the EventSystem.</param>
		</member>
		<member name="M:UnityEngine.UI.Selectable.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Evaluate current state and transition to appropreate state.</para>
			</summary>
			<param name="eventData">The EventData usually sent by the EventSystem.</param>
		</member>
		<member name="M:UnityEngine.UI.Selectable.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Evaluate current state and transition to normal state.</para>
			</summary>
			<param name="eventData">The EventData usually sent by the EventSystem.</param>
		</member>
		<member name="M:UnityEngine.UI.Selectable.OnSelect(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>Set selection and transition to appropreate state.</para>
			</summary>
			<param name="eventData">The EventData usually sent by the EventSystem.</param>
		</member>
		<member name="M:UnityEngine.UI.Selectable.OnDeselect(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>Unset selection and transition to appropreate state.</para>
			</summary>
			<param name="eventData">The eventData usually sent by the EventSystem.</param>
		</member>
		<member name="M:UnityEngine.UI.Selectable.Select">
			<summary>
				<para>Selects this Selectable.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Selectable.allSelectables">
			<summary>
				<para>List of all the selectable objects currently active in the scene.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Selectable.navigation">
			<summary>
				<para>The <see cref="Navigation">Navigation</see> setting for this selectable object.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Selectable.transition">
			<summary>
				<para>The type of transition that will be applied to the targetGraphic when the state changes.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Selectable.colors">
			<summary>
				<para>The <see cref="ColorBlock">ColorBlock</see> for this selectable object.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Selectable.spriteState">
			<summary>
				<para>The <see cref="SpriteState">SpriteState</see> for this selectable object.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Selectable.animationTriggers">
			<summary>
				<para>The <see cref="AnimationTriggers">AnimationTriggers</see> for this selectable object.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Selectable.targetGraphic">
			<summary>
				<para>Graphic that will be transitioned upon.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Selectable.interactable">
			<summary>
				<para>Is the Selectable eligable for interaction (excludes canvas groups).</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Selectable.image">
			<summary>
				<para>Convenience function that converts the referenced Graphic to a Image, if possible.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Selectable.animator">
			<summary>
				<para>Convenience function to get the Animator component on the GameObject.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Selectable+Transition">
			<summary>
				<para>Transition mode for a <see cref="Selectable">Selectable</see>.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Selectable+Transition.None">
			<summary>
				<para>No Transition.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Selectable+Transition.ColorTint">
			<summary>
				<para>Use an color tint transition.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Selectable+Transition.SpriteSwap">
			<summary>
				<para>Use a sprite swap transition.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Selectable+Transition.Animation">
			<summary>
				<para>Use an animation transition.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Slider">
			<summary>
				<para>A standard slider that can be moved between a minimum and maximum value.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Slider.Rebuild(UnityEngine.UI.CanvasUpdate)">
			<summary>
				<para>Handling for when the canvas is rebuilt.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Slider.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Handling for when the pointer is pressed down on the slider.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Slider.OnDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Handling for when the slider is dragged.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Slider.OnMove(UnityEngine.EventSystems.AxisEventData)">
			<summary>
				<para>Handling for movement events.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Slider.FindSelectableOnLeft">
			<summary>
				<para>See member in base class.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Slider.FindSelectableOnRight">
			<summary>
				<para>See member in base class.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Slider.FindSelectableOnUp">
			<summary>
				<para>See member in base class.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Slider.FindSelectableOnDown">
			<summary>
				<para>See member in base class.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Slider.OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>See:<see cref="IInitializePotentialDragHandler">IInitializePotentialDragHandler</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Slider.SetDirection(UnityEngine.UI.Slider.Direction,System.Boolean)">
			<summary>
				<para>Sets the direction of this slider, optionally changing the layout as well.</para>
			</summary>
			<param name="direction">The direction of the slider.</param>
			<param name="includeRectLayouts">Should the layout be flipped together with the slider direction?</param>
		</member>
		<member name="P:UnityEngine.UI.Slider.fillRect">
			<summary>
				<para>Optional RectTransform to use as fill for the slider.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Slider.handleRect">
			<summary>
				<para>Optional RectTransform to use as a handle for the slider.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Slider.direction">
			<summary>
				<para>The direction of the slider, from minimum to maximum value.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Slider.minValue">
			<summary>
				<para>The minimum allowed value of the slider.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Slider.maxValue">
			<summary>
				<para>The maximum allowed value of the slider.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Slider.wholeNumbers">
			<summary>
				<para>Should the value only be allowed to be whole numbers?</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Slider.value">
			<summary>
				<para>The current value of the slider.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Slider.normalizedValue">
			<summary>
				<para>The current value of the slider normalized into a value between 0 and 1.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Slider.onValueChanged">
			<summary>
				<para>Callback executed when the value of the slider is changed.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Slider+Direction">
			<summary>
				<para>Setting that indicates one of four directions.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Slider+Direction.LeftToRight">
			<summary>
				<para>From left to right.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Slider+Direction.RightToLeft">
			<summary>
				<para>From right to left.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Slider+Direction.BottomToTop">
			<summary>
				<para>From bottom to top.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Slider+Direction.TopToBottom">
			<summary>
				<para>From top to bottom.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Slider+SliderEvent">
			<summary>
				<para>Event type used by the <see cref="Slider">Slider</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.SpriteState">
			<summary>
				<para>Structure to store the state of a sprite transition on a <see cref="Selectable">Selectable</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.SpriteState.highlightedSprite">
			<summary>
				<para>Highlighted sprite.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.SpriteState.pressedSprite">
			<summary>
				<para>Pressed sprite.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.SpriteState.disabledSprite">
			<summary>
				<para>Disabled sprite.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Text">
			<summary>
				<para>The default <see cref="Graphic">Graphic</see> to draw font data to screen.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Text.FontTextureChanged">
			<summary>
				<para>Called by the [FontUpdateTracker] when the texutre associated with a font is modified.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Text.GetGenerationSettings(UnityEngine.Vector2)">
			<summary>
				<para>Convenience function to populate the generation setting for the text.</para>
			</summary>
			<param name="extents">The extents the text can draw in.</param>
		</member>
		<member name="M:UnityEngine.UI.Text.GetTextAnchorPivot(UnityEngine.TextAnchor)">
			<summary>
				<para>Convenience function to determine the vector offset of the anchor.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Text.CalculateLayoutInputHorizontal">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Text.CalculateLayoutInputVertical">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Text.OnRebuildRequested" />
		<member name="P:UnityEngine.UI.Text.cachedTextGenerator">
			<summary>
				<para>The cached <see cref="TextGenerator">TextGenerator</see> used when generating visible <see cref="Text">Text</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.cachedTextGeneratorForLayout">
			<summary>
				<para>The cached <see cref="TextGenerator">TextGenerator</see> used when determine <see cref="Layout">Layout</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.defaultMaterial">
			<summary>
				<para>The static <see cref="Material">Material</see> used to draw all default <see cref="Text">Text</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.mainTexture">
			<summary>
				<para>The <see cref="Texture">Texture</see> that comes from the <see cref="Font">Font</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.font">
			<summary>
				<para>The <see cref="Font">Font</see> used by the text.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.text">
			<summary>
				<para>The string value this text will display.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.supportRichText">
			<summary>
				<para>Whether this Text will support rich text.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.resizeTextForBestFit">
			<summary>
				<para>Should the text be allowed to auto resized.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.resizeTextMinSize">
			<summary>
				<para>The minimum size the text is allowed to be.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.resizeTextMaxSize">
			<summary>
				<para>The maximum size the text is allowed to be. 1 = infinitly large.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.alignment">
			<summary>
				<para>The positioning of the text reliative to its <see cref="RectTransform">RectTransform</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.fontSize">
			<summary>
				<para>The size that the <see cref="Font">Font</see> should render at.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.horizontalOverflow">
			<summary>
				<para>Horizontal overflow mode.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.verticalOverflow">
			<summary>
				<para>Vertical overflow mode.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.lineSpacing">
			<summary>
				<para>The spacing between the lines (as a multiple of the default line spacing).</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.fontStyle">
			<summary>
				<para>
					<see cref="FontStyle">FontStyle</see> used by the text.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.pixelsPerUnit">
			<summary>
				<para>The number of pixels in the Text that correspond to one unit in world space. (Read Only)</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.minWidth">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.preferredWidth">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.flexibleWidth">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.minHeight">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.preferredHeight">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.flexibleHeight">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Text.layoutPriority">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Toggle">
			<summary>
				<para>A standard toggle that has an on / off state.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Toggle.Rebuild(UnityEngine.UI.CanvasUpdate)">
			<summary>
				<para>Handling for when the canvas is rebuilt.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Toggle.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
			<summary>
				<para>Handling for when the toggle is 'clicked'.</para>
			</summary>
			<param name="eventData">Current event.</param>
		</member>
		<member name="M:UnityEngine.UI.Toggle.OnSubmit(UnityEngine.EventSystems.BaseEventData)">
			<summary>
				<para>Handling for when the submit key is pressed.</para>
			</summary>
			<param name="eventData">Current event.</param>
		</member>
		<member name="F:UnityEngine.UI.Toggle.toggleTransition">
			<summary>
				<para>Transition mode for the toggle.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Toggle.graphic">
			<summary>
				<para>Graphic affected by the toggle.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Toggle.onValueChanged">
			<summary>
				<para>Callback executed when the value of the toggle is changed.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Toggle.group">
			<summary>
				<para>Group the toggle belongs to.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Toggle.isOn">
			<summary>
				<para>Is the toggle on.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Toggle+ToggleTransition">
			<summary>
				<para>Display settings for when a toggle is activated or deactivated.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Toggle+ToggleTransition.None">
			<summary>
				<para>Show / hide the toggle instantly.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.Toggle+ToggleTransition.Fade">
			<summary>
				<para>Fade the toggle in / out.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.Toggle+ToggleEvent">
			<summary>
				<para>
					<see cref="UnityEvent">UnityEvent</see> callback for when a toggle is toggled.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ToggleGroup">
			<summary>
				<para>A component that represents a group of <see cref="Toggle">Toggle</see>s.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ToggleGroup.NotifyToggleOn(UnityEngine.UI.Toggle)">
			<summary>
				<para>Notify the group that the given toggle is enabled.</para>
			</summary>
			<param name="toggle">Toggle that is enabled.</param>
		</member>
		<member name="M:UnityEngine.UI.ToggleGroup.UnregisterToggle(UnityEngine.UI.Toggle)">
			<summary>
				<para>Toggle to unregister.</para>
			</summary>
			<param name="toggle">Unregister toggle.</param>
		</member>
		<member name="M:UnityEngine.UI.ToggleGroup.RegisterToggle(UnityEngine.UI.Toggle)">
			<summary>
				<para>Register a toggle with the group.</para>
			</summary>
			<param name="toggle">To register.</param>
		</member>
		<member name="M:UnityEngine.UI.ToggleGroup.AnyTogglesOn">
			<summary>
				<para>Are any of the toggles on?</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ToggleGroup.ActiveToggles">
			<summary>
				<para>Returns the toggles in this group that are active.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ToggleGroup.SetAllTogglesOff">
			<summary>
				<para>Switch all toggles off.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ToggleGroup.allowSwitchOff">
			<summary>
				<para>Is it allowed that no toggle is switched on?</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.AspectRatioFitter">
			<summary>
				<para>Resizes a RectTransform to fit a specified aspect ratio.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.AspectRatioFitter.SetLayoutHorizontal">
			<summary>
				<para>Method called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.AspectRatioFitter.SetLayoutVertical">
			<summary>
				<para>Method called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.AspectRatioFitter.aspectMode">
			<summary>
				<para>The mode to use to enforce the aspect ratio.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.AspectRatioFitter.aspectRatio">
			<summary>
				<para>The aspect ratio to enforce. This means width divided by height.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.AspectRatioFitter+AspectMode">
			<summary>
				<para>Specifies a mode to use to enforce an aspect ratio.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.AspectRatioFitter+AspectMode.None">
			<summary>
				<para>The aspect ratio is not enforced.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.AspectRatioFitter+AspectMode.WidthControlsHeight">
			<summary>
				<para>Changes the height of the rectangle to match the aspect ratio.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.AspectRatioFitter+AspectMode.HeightControlsWidth">
			<summary>
				<para>Changes the width of the rectangle to match the aspect ratio.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.AspectRatioFitter+AspectMode.FitInParent">
			<summary>
				<para>Sizes the rectangle such that it's fully contained within the parent rectangle.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.AspectRatioFitter+AspectMode.EnvelopeParent">
			<summary>
				<para>Sizes the rectangle such that the parent rectangle is fully contained within.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.CanvasScaler">
			<summary>
				<para>The Canvas Scaler component is used for controlling the overall scale and pixel density of UI elements in the Canvas.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.CanvasScaler.uiScaleMode">
			<summary>
				<para>Determines how UI elements in the Canvas are scaled.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.CanvasScaler.referencePixelsPerUnit">
			<summary>
				<para>If a sprite has this 'Pixels Per Unit' setting, then one pixel in the sprite will cover one unit in the UI.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.CanvasScaler.scaleFactor">
			<summary>
				<para>Scales all UI elements in the Canvas by this factor.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.CanvasScaler.referenceResolution">
			<summary>
				<para>The resolution the UI layout is designed for.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.CanvasScaler.screenMatchMode">
			<summary>
				<para>A mode used to scale the canvas area if the aspect ratio of the current resolution doesn't fit the reference resolution.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.CanvasScaler.matchWidthOrHeight">
			<summary>
				<para>Setting to scale the Canvas to match the width or height of the reference resolution, or a combination.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.CanvasScaler.physicalUnit">
			<summary>
				<para>The physical unit to specify positions and sizes in.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.CanvasScaler.fallbackScreenDPI">
			<summary>
				<para>The DPI to assume if the screen DPI is not known.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.CanvasScaler.defaultSpriteDPI">
			<summary>
				<para>The pixels per inch to use for sprites that have a 'Pixels Per Unit' setting that matches the 'Reference Pixels Per Unit' setting.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.CanvasScaler.dynamicPixelsPerUnit">
			<summary>
				<para>The amount of pixels per unit to use for dynamically created bitmaps in the UI, such as Text.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.CanvasScaler+ScaleMode">
			<summary>
				<para>Determines how UI elements in the Canvas are scaled.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasScaler+ScaleMode.ConstantPixelSize">
			<summary>
				<para>Using the Constant Pixel Size mode, positions and sizes of UI elements are specified in pixels on the screen.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasScaler+ScaleMode.ScaleWithScreenSize">
			<summary>
				<para>Using the Scale With Screen Size mode, positions and sizes can be specified according to the pixels of a specified reference resolution.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasScaler+ScaleMode.ConstantPhysicalSize">
			<summary>
				<para>Using the Constant Physical Size mode, positions and sizes of UI elements are specified in physical units, such as millimeters, points, or picas.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.CanvasScaler+ScreenMatchMode">
			<summary>
				<para>A mode used to scale the canvas area if the aspect ratio of the current resolution doesn't fit the reference resolution.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasScaler+ScreenMatchMode.MatchWidthOrHeight">
			<summary>
				<para>Scale the canvas area with the width as reference, the height as reference, or something in between.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasScaler+ScreenMatchMode.Expand">
			<summary>
				<para>Expand the canvas area either horizontally or vertically, so the size of the canvas will never be smaller than the reference.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasScaler+ScreenMatchMode.Shrink">
			<summary>
				<para>Crop the canvas area either horizontally or vertically, so the size of the canvas will never be larger than the reference.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.CanvasScaler+Unit">
			<summary>
				<para>Settings used to specify a physical unit.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasScaler+Unit.Centimeters">
			<summary>
				<para>Use centimeters.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasScaler+Unit.Millimeters">
			<summary>
				<para>Use millimeters.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasScaler+Unit.Inches">
			<summary>
				<para>Use inches.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasScaler+Unit.Points">
			<summary>
				<para>Use points.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.CanvasScaler+Unit.Picas">
			<summary>
				<para>Use picas.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ContentSizeFitter">
			<summary>
				<para>Resizes a RectTransform to fit the size of its content.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ContentSizeFitter.SetLayoutHorizontal">
			<summary>
				<para>Method called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ContentSizeFitter.SetLayoutVertical">
			<summary>
				<para>Method called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ContentSizeFitter.horizontalFit">
			<summary>
				<para>The fit mode to use to determine the width.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ContentSizeFitter.verticalFit">
			<summary>
				<para>The fit mode to use to determine the height.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ContentSizeFitter+FitMode">
			<summary>
				<para>The size fit mode to use.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.ContentSizeFitter+FitMode.Unconstrained">
			<summary>
				<para>Don't perform any resizing.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.ContentSizeFitter+FitMode.MinSize">
			<summary>
				<para>Resize to the minimum size of the content.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.ContentSizeFitter+FitMode.PreferredSize">
			<summary>
				<para>Resize to the preferred size of the content.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.GridLayoutGroup">
			<summary>
				<para>Layout child layout elements in a grid.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.GridLayoutGroup.CalculateLayoutInputHorizontal">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.GridLayoutGroup.CalculateLayoutInputVertical">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.GridLayoutGroup.SetLayoutHorizontal">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.GridLayoutGroup.SetLayoutVertical">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.GridLayoutGroup.startCorner">
			<summary>
				<para>Which corner should the first cell be placed in?</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.GridLayoutGroup.startAxis">
			<summary>
				<para>Which axis should cells be placed along first?</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.GridLayoutGroup.cellSize">
			<summary>
				<para>The size to use for each cell in the grid.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.GridLayoutGroup.spacing">
			<summary>
				<para>The spacing to use between layout elements in the grid.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.GridLayoutGroup.constraint">
			<summary>
				<para>Which constraint to use fo the GridLayoutGroup.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.GridLayoutGroup.constraintCount">
			<summary>
				<para>How many cells there should be along the constrained axis.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.GridLayoutGroup+Corner">
			<summary>
				<para>One of the four corners in a rectangle.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GridLayoutGroup+Corner.UpperLeft">
			<summary>
				<para>Upper left.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GridLayoutGroup+Corner.UpperRight">
			<summary>
				<para>Upper right.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GridLayoutGroup+Corner.LowerLeft">
			<summary>
				<para>Lower left.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GridLayoutGroup+Corner.LowerRight">
			<summary>
				<para>Lower right.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.GridLayoutGroup+Axis">
			<summary>
				<para>An axis that can be horizontal or vertical.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GridLayoutGroup+Axis.Horizontal">
			<summary>
				<para>Horizontal.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GridLayoutGroup+Axis.Vertical">
			<summary>
				<para>Vertical.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.GridLayoutGroup+Constraint">
			<summary>
				<para>A constraint on either the number of columns or rows.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GridLayoutGroup+Constraint.Flexible">
			<summary>
				<para>Don't constrain the number of rows or columns.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GridLayoutGroup+Constraint.FixedColumnCount">
			<summary>
				<para>Constraint the number of columns to a specified number.</para>
			</summary>
		</member>
		<member name="F:UnityEngine.UI.GridLayoutGroup+Constraint.FixedRowCount">
			<summary>
				<para>Constraint the number of rows to a specified number.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.HorizontalLayoutGroup">
			<summary>
				<para>Layout child layout elements side by side.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.HorizontalLayoutGroup.CalculateLayoutInputHorizontal">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.HorizontalLayoutGroup.CalculateLayoutInputVertical">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.HorizontalLayoutGroup.SetLayoutHorizontal">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.HorizontalLayoutGroup.SetLayoutVertical">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.HorizontalOrVerticalLayoutGroup">
			<summary>
				<para>Abstract base class for <see cref="HorizontalLayoutGroup">HorizontalLayoutGroup</see> and <see cref="VerticalLayoutGroup">VerticalLayoutGroup</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.HorizontalOrVerticalLayoutGroup.spacing">
			<summary>
				<para>The spacing to use between layout elements in the layout group.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.HorizontalOrVerticalLayoutGroup.childForceExpandWidth">
			<summary>
				<para>Whether to force the children to expand to fill additional available horizontal space.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.HorizontalOrVerticalLayoutGroup.childForceExpandHeight">
			<summary>
				<para>Whether to force the children to expand to fill additional available vertical space.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ILayoutElement">
			<summary>
				<para>A component is treated as a layout element by the auto layout system if it implements ILayoutElement.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ILayoutElement.CalculateLayoutInputHorizontal">
			<summary>
				<para>The minWidth, preferredWidth, and flexibleWidth values may be calculated in this callback.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ILayoutElement.CalculateLayoutInputVertical">
			<summary>
				<para>The minHeight, preferredHeight, and flexibleHeight values may be calculated in this callback.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ILayoutElement.minWidth">
			<summary>
				<para>The minimum width this layout element may be allocated.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ILayoutElement.preferredWidth">
			<summary>
				<para>The preferred width this layout element should be allocated if there is sufficient space.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ILayoutElement.flexibleWidth">
			<summary>
				<para>The extra relative width this layout element should be allocated if there is additional available space.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ILayoutElement.minHeight">
			<summary>
				<para>The minimum height this layout element may be allocated.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ILayoutElement.preferredHeight">
			<summary>
				<para>The preferred height this layout element should be allocated if there is sufficient space.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ILayoutElement.flexibleHeight">
			<summary>
				<para>The extra relative height this layout element should be allocated if there is additional available space.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ILayoutElement.layoutPriority">
			<summary>
				<para>The layout priority of this component.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ILayoutController">
			<summary>
				<para>Base interface to implement by componets that control the layout of RectTransforms.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ILayoutController.SetLayoutHorizontal">
			<summary>
				<para>Callback invoked by the auto layout system which handles horizontal aspects of the layout.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.ILayoutController.SetLayoutVertical">
			<summary>
				<para>Callback invoked by the auto layout system which handles vertical aspects of the layout.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ILayoutGroup">
			<summary>
				<para>ILayoutGroup is an ILayoutController that should drive the RectTransforms of its children.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ILayoutSelfController">
			<summary>
				<para>ILayoutSelfController is an ILayoutController that should drive its own RectTransform.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.ILayoutIgnorer">
			<summary>
				<para>A RectTransform will be ignored by the layout system if it has a component which implements ILayoutIgnorer.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.ILayoutIgnorer.ignoreLayout">
			<summary>
				<para>Should this RectTransform be ignored bvy the layout system?</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.LayoutElement">
			<summary>
				<para>Add this component to a GameObject to make it into a layout element or override values on an existing layout element.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.LayoutElement.CalculateLayoutInputHorizontal">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.LayoutElement.CalculateLayoutInputVertical">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutElement.ignoreLayout">
			<summary>
				<para>Should this RectTransform be ignored by the layout system?</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutElement.minWidth">
			<summary>
				<para>The minimum width this layout element may be allocated.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutElement.minHeight">
			<summary>
				<para>The minimum height this layout element may be allocated.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutElement.preferredWidth">
			<summary>
				<para>The preferred width this layout element should be allocated if there is sufficient space.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutElement.preferredHeight">
			<summary>
				<para>The preferred height this layout element should be allocated if there is sufficient space.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutElement.flexibleWidth">
			<summary>
				<para>The extra relative width this layout element should be allocated if there is additional available space.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutElement.flexibleHeight">
			<summary>
				<para>The extra relative height this layout element should be allocated if there is additional available space.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutElement.layoutPriority">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.LayoutGroup">
			<summary>
				<para>Abstract base class to use for layout groups.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.LayoutGroup.CalculateLayoutInputHorizontal">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.LayoutGroup.CalculateLayoutInputVertical">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.LayoutGroup.SetLayoutHorizontal">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.LayoutGroup.SetLayoutVertical">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutGroup.padding">
			<summary>
				<para>The padding to add around the child layout elements.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutGroup.childAlignment">
			<summary>
				<para>The alignment to use for the child layout elements in the layout group.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutGroup.minWidth">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutGroup.preferredWidth">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutGroup.flexibleWidth">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutGroup.minHeight">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutGroup.preferredHeight">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutGroup.flexibleHeight">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.LayoutGroup.layoutPriority">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.LayoutRebuilder">
			<summary>
				<para>Wrapper class for managing layout rebuilding of CanvasElement.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.LayoutRebuilder.IsDestroyed" />
		<member name="M:UnityEngine.UI.LayoutRebuilder.MarkLayoutForRebuild(UnityEngine.RectTransform)">
			<summary>
				<para>Mark the given <see cref="RectTransform">RectTransform</see> as needing it's layout to be recalculated during the next layout pass.</para>
			</summary>
			<param name="rect">Rect to rebuild.</param>
		</member>
		<member name="M:UnityEngine.UI.LayoutRebuilder.Equals(UnityEngine.UI.LayoutRebuilder)">
			<summary>
				<para>Does the passed rebuilder point to the same CanvasElement.</para>
			</summary>
			<param name="other">Other.</param>
		</member>
		<member name="M:UnityEngine.UI.LayoutRebuilder.ToString" />
		<member name="P:UnityEngine.UI.LayoutRebuilder.transform">
			<summary>
				<para>See <see cref="ICanvasElement">ICanvasElement</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.LayoutUtility">
			<summary>
				<para>Utility functions for querying layout elements for their minimum, preferred, and flexible sizes.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.LayoutUtility.GetMinSize(UnityEngine.RectTransform,System.Int32)">
			<summary>
				<para>Returns the minimum size of the layout element.</para>
			</summary>
			<param name="rect">The RectTransform of the layout element to query.</param>
			<param name="axis">The axis to query. This can be 0 or 1.</param>
		</member>
		<member name="M:UnityEngine.UI.LayoutUtility.GetPreferredSize(UnityEngine.RectTransform,System.Int32)">
			<summary>
				<para>Returns the preferred size of the layout element.</para>
			</summary>
			<param name="rect">The RectTransform of the layout element to query.</param>
			<param name="axis">The axis to query. This can be 0 or 1.</param>
		</member>
		<member name="M:UnityEngine.UI.LayoutUtility.GetFlexibleSize(UnityEngine.RectTransform,System.Int32)">
			<summary>
				<para>Returns the flexible size of the layout element.</para>
			</summary>
			<param name="rect">The RectTransform of the layout element to query.</param>
			<param name="axis">The axis to query. This can be 0 or 1.</param>
		</member>
		<member name="M:UnityEngine.UI.LayoutUtility.GetMinWidth(UnityEngine.RectTransform)">
			<summary>
				<para>Returns the minimum width of the layout element.</para>
			</summary>
			<param name="rect">The RectTransform of the layout element to query.</param>
		</member>
		<member name="M:UnityEngine.UI.LayoutUtility.GetPreferredWidth(UnityEngine.RectTransform)">
			<summary>
				<para>Returns the preferred width of the layout element.</para>
			</summary>
			<param name="rect">The RectTransform of the layout element to query.</param>
		</member>
		<member name="M:UnityEngine.UI.LayoutUtility.GetFlexibleWidth(UnityEngine.RectTransform)">
			<summary>
				<para>Returns the flexible width of the layout element.</para>
			</summary>
			<param name="rect">The RectTransform of the layout element to query.</param>
		</member>
		<member name="M:UnityEngine.UI.LayoutUtility.GetMinHeight(UnityEngine.RectTransform)">
			<summary>
				<para>Returns the minimum height of the layout element.</para>
			</summary>
			<param name="rect">The RectTransform of the layout element to query.</param>
		</member>
		<member name="M:UnityEngine.UI.LayoutUtility.GetPreferredHeight(UnityEngine.RectTransform)">
			<summary>
				<para>Returns the preferred height of the layout element.</para>
			</summary>
			<param name="rect">The RectTransform of the layout element to query.</param>
		</member>
		<member name="M:UnityEngine.UI.LayoutUtility.GetFlexibleHeight(UnityEngine.RectTransform)">
			<summary>
				<para>Returns the flexible height of the layout element.</para>
			</summary>
			<param name="rect">The RectTransform of the layout element to query.</param>
		</member>
		<member name="M:UnityEngine.UI.LayoutUtility.GetLayoutProperty(UnityEngine.RectTransform,System.Func{UnityEngine.UI.ILayoutElement,System.Single},System.Single)">
			<summary>
				<para>Gets a calculated layout property for the layout element with the given RectTransform.</para>
			</summary>
			<param name="rect">The RectTransform of the layout element to get a property for.</param>
			<param name="property">The property to calculate.</param>
			<param name="defaultValue">The default value to use if no component on the layout element supplies the given property.</param>
		</member>
		<member name="M:UnityEngine.UI.LayoutUtility.GetLayoutProperty(UnityEngine.RectTransform,System.Func{UnityEngine.UI.ILayoutElement,System.Single},System.Single,UnityEngine.UI.ILayoutElement@)">
			<summary>
				<para>Gets a calculated layout property for the layout element with the given RectTransform.</para>
			</summary>
			<param name="rect">The RectTransform of the layout element to get a property for.</param>
			<param name="property">The property to calculate.</param>
			<param name="defaultValue">The default value to use if no component on the layout element supplies the given property.</param>
			<param name="source">Optional out parameter to get the component that supplied the calculated value.</param>
		</member>
		<member name="T:UnityEngine.UI.VerticalLayoutGroup">
			<summary>
				<para>Layout child layout elements below each other.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.VerticalLayoutGroup.CalculateLayoutInputHorizontal">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.VerticalLayoutGroup.CalculateLayoutInputVertical">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.VerticalLayoutGroup.SetLayoutHorizontal">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.VerticalLayoutGroup.SetLayoutVertical">
			<summary>
				<para>Called by the layout system.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.IMaterialModifier">
			<summary>
				<para>Interface which allows for the modification of the <see cref="Material">Material</see> used to render a <see cref="Graphic">Graphic</see> before they are passed to the <see cref="CanvasRenderer">CanvasRenderer</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.IMaterialModifier.GetModifiedMaterial(UnityEngine.Material)">
			<summary>
				<para>Perform material modification in this function.</para>
			</summary>
			<param name="baseMaterial">Configured Material.</param>
		</member>
		<member name="T:UnityEngine.UI.Mask">
			<summary>
				<para>A component for masking children elements.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Mask.MaskEnabled">
			<summary>
				<para>See: <see cref="IMask">IMask</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Mask.OnSiblingGraphicEnabledDisabled">
			<summary>
				<para>See: <see cref="IGraphicEnabledDisabled">IGraphicEnabledDisabled</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Mask.IsRaycastLocationValid(UnityEngine.Vector2,UnityEngine.Camera)">
			<summary>
				<para>See: <see cref="ICanvasRaycastFilter">ICanvasRaycastFilter</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Mask.GetModifiedMaterial(UnityEngine.Material)">
			<summary>
				<para>See <see cref="IMaterialModifier">IMaterialModifier</see>.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Mask.showMaskGraphic">
			<summary>
				<para>Show the graphic that is associated with the Mask render area.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Mask.rectTransform">
			<summary>
				<para>Cached <see cref="RectTransform">RectTransform</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.BaseVertexEffect">
			<summary>
				<para>Base class for effects that modify the the generated Vertex Buffers.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.BaseVertexEffect.ModifyVertices(System.Collections.Generic.List{UnityEngine.UIVertex})">
			<summary>
				<para>See:<see cref="IVertexModifier">IVertexModifier</see>.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.IVertexModifier">
			<summary>
				<para>Interface which allows for the modification of verticies in a <see cref="Graphic">Graphic</see> before they are passed to the <see cref="CanvasRenderer">CanvasRenderer</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.IVertexModifier.ModifyVertices(System.Collections.Generic.List{UnityEngine.UIVertex})">
			<summary>
				<para>Call used to modify vertices.</para>
			</summary>
			<param name="verts">To modify.</param>
		</member>
		<member name="T:UnityEngine.UI.Outline">
			<summary>
				<para>Adds an outline to a graphic using <see cref="IVertexModifier">IVertexModifier</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Outline.ModifyVertices(System.Collections.Generic.List{UnityEngine.UIVertex})" />
		<member name="T:UnityEngine.UI.PositionAsUV1">
			<summary>
				<para>An <see cref="IVertexModifier">IVertexModifier</see> which sets the raw vertex position into UV1 of the generated verts.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.PositionAsUV1.ModifyVertices(System.Collections.Generic.List{UnityEngine.UIVertex})" />
		<member name="T:UnityEngine.UI.Shadow">
			<summary>
				<para>Adds an outline to a graphic using <see cref="IVertexModifier">IVertexModifier</see>.</para>
			</summary>
		</member>
		<member name="M:UnityEngine.UI.Shadow.ModifyVertices(System.Collections.Generic.List{UnityEngine.UIVertex})" />
		<member name="P:UnityEngine.UI.Shadow.effectColor">
			<summary>
				<para>Color for the effect.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Shadow.effectDistance">
			<summary>
				<para>How far is the shadow from the graphic.</para>
			</summary>
		</member>
		<member name="P:UnityEngine.UI.Shadow.useGraphicAlpha">
			<summary>
				<para>Should the shadow inherit the alpha from the graphic?</para>
			</summary>
		</member>
		<member name="T:UnityEngine.EventSystems.ExecuteEvents+EventFunction`1">
			<summary>
				<para>Funtion definition for an EventFunction that is used to map a given EventInterface into a specific event call.</para>
			</summary>
		</member>
		<member name="T:UnityEngine.UI.InputField+OnValidateInput">
			<summary>
				<para>Custom validation callback.</para>
			</summary>
		</member>
	</members>
</doc>